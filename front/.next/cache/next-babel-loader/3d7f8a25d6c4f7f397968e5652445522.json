{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\TodoList\\\\front\\\\components\\\\loginForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { Input, Button } from 'antd';\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\nimport { loginRequestAction } from '../reducers/user';\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      errors = _useForm.errors; // console.log(watch('example')); // watch input value by passing the name of it\n\n\n  var dispatch = useDispatch();\n\n  var onSubmit = function onSubmit(data) {\n    dispatch(loginRequestAction({\n      id: data.id,\n      password: data.password\n    }));\n    console.log(data.id, data.password);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    name: \"id\",\n    placeholder: \"Enter ID\",\n    ref: register({\n      required: true\n    }),\n    style: {\n      width: '150px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), errors.id && __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }\n  }, \"id is required\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), __jsx(Input.Password, {\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    placeholder: \"Enter Password\",\n    iconRender: function iconRender(visible) {\n      return visible ? __jsx(EyeTwoTone, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 47\n        }\n      }) : __jsx(EyeInvisibleOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 64\n        }\n      });\n    },\n    style: {\n      width: '150px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), errors.password && __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, \"password is required\"), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    ghost: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Primary\")));\n};\n\n_s(LoginForm, \"vPFK2pKRWaWGaeDP5eZwYJyKpZ4=\", false, function () {\n  return [useForm, useDispatch];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/components/loginForm.js"],"names":["React","useForm","useDispatch","Input","Button","EyeInvisibleOutlined","EyeTwoTone","loginRequestAction","LoginForm","register","handleSubmit","watch","errors","dispatch","onSubmit","data","id","password","console","log","required","width","visible"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,MAA9B;AACA,SAASC,oBAAT,EAA+BC,UAA/B,QAAiD,mBAAjD;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,iBAC4BP,OAAO,EADnC;AAAA,MACdQ,QADc,YACdA,QADc;AAAA,MACJC,YADI,YACJA,YADI;AAAA,MACUC,KADV,YACUA,KADV;AAAA,MACiBC,MADjB,YACiBA,MADjB,EAEtB;;;AAEA,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,MAAMY,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzBF,IAAAA,QAAQ,CAACN,kBAAkB,CAAC;AAC1BS,MAAAA,EAAE,EAAED,IAAI,CAACC,EADiB;AAE1BC,MAAAA,QAAQ,EAAEF,IAAI,CAACE;AAFW,KAAD,CAAnB,CAAR;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACC,EAAjB,EAAqBD,IAAI,CAACE,QAA1B;AACD,GAND;;AAQA,SACE,4BAEE;AAAM,IAAA,QAAQ,EAAEP,YAAY,CAACI,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,IAAZ;AAAiB,IAAA,WAAW,EAAC,UAA7B;AAAwC,IAAA,GAAG,EAAEL,QAAQ,CAAC;AAAEW,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAArD;AAA2E,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGT,MAAM,CAACI,EAAP,IAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHhB,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,MAAC,KAAD,CAAO,QAAP;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,GAAG,EAAEP,QAAQ,CAAC;AAAEW,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAFf;AAGE,IAAA,WAAW,EAAC,gBAHd;AAIE,IAAA,UAAU,EAAE,oBAACE,OAAD;AAAA,aAAcA,OAAO,GAAG,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAAoB,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzC;AAAA,KAJd;AAKE,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAcGT,MAAM,CAACK,QAAP,IAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAdtB,EAeE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,KAAK,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAfF,CAFF,CADF;AAsBD,CApCD;;GAAMT,S;UAC8CP,O,EAGjCC,W;;;KAJbM,S;AAsCN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Input, Button } from 'antd';\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport { loginRequestAction } from '../reducers/user';\r\n\r\nconst LoginForm = () => {\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  // console.log(watch('example')); // watch input value by passing the name of it\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(loginRequestAction({\r\n      id: data.id,\r\n      password: data.password,\r\n    }));\r\n    console.log(data.id, data.password);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */}\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {/* register your input into the hook by invoking the \"register\" function */}\r\n        <Input name=\"id\" placeholder=\"Enter ID\" ref={register({ required: true })} style={{ width: '150px' }} />\r\n        {errors.id && <span>id is required</span>}\r\n        {/* include validation with required or other standard HTML validation rules */}\r\n        <br />\r\n        <Input.Password\r\n          name=\"password\"\r\n          ref={register({ required: true })}\r\n          placeholder=\"Enter Password\"\r\n          iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n          style={{ width: '150px' }}\r\n        />\r\n        {/* errors will return when field validation fails  */}\r\n        {errors.password && <span>password is required</span>}\r\n        <Button type=\"primary\" htmlType=\"submit\" ghost>Primary</Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}