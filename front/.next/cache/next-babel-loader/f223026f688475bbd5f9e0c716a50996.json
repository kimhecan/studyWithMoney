{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  info: {\n    id: null,\n    password: null,\n    nickname: null,\n    email: null,\n    grade: null,\n    department: null\n  }\n};\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n});\nexport const joinRequestAction = data => ({\n  type: SIGN_UP_REQUEST,\n  data\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      draft.info.id = action.data.id;\n      draft.info.password = action.data.password;\n      break;\n\n    case LOG_IN_SUCCESS:\n      break;\n\n    case LOG_IN_FAILURE:\n      draft.info.logInError = action.error;\n      break;\n\n    case SIGN_UP_REQUEST:\n      draft.info = action.data;\n      break;\n\n    case SIGN_UP_SUCCESS:\n      break;\n\n    case SIGN_UP_FAILURE:\n      draft.info.logInError = action.error;\n      break;\n\n    case LOG_OUT_REQUEST:\n      draft.info = {\n        id: null,\n        password: null,\n        nickname: null,\n        email: null,\n        grade: null,\n        department: null\n      };\n      break;\n\n    case LOG_OUT_SUCCESS:\n      break;\n\n    case LOG_OUT_FAILURE:\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/reducers/user.js"],"names":["produce","initialState","info","id","password","nickname","email","grade","department","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","loginRequestAction","data","type","joinRequestAction","reducer","state","action","draft","logInError","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,IADA;AAEJC,IAAAA,QAAQ,EAAE,IAFN;AAGJC,IAAAA,QAAQ,EAAE,IAHN;AAIJC,IAAAA,KAAK,EAAE,IAJH;AAKJC,IAAAA,KAAK,EAAE,IALH;AAMJC,IAAAA,UAAU,EAAE;AANR;AADoB,CAArB;AAWP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,KAAW;AAC3CC,EAAAA,IAAI,EAAER,cADqC;AAE3CO,EAAAA;AAF2C,CAAX,CAA3B;AAKP,OAAO,MAAME,iBAAiB,GAAIF,IAAD,KAAW;AAC1CC,EAAAA,IAAI,EAAEX,eADoC;AAE1CU,EAAAA;AAF0C,CAAX,CAA1B;;AAKP,MAAMG,OAAO,GAAG,CAACC,KAAK,GAAGtB,YAAT,EAAuBuB,MAAvB,KAAkCxB,OAAO,CAACuB,KAAD,EAASE,KAAD,IAAW;AAC1E,UAAQD,MAAM,CAACJ,IAAf;AACE,SAAKR,cAAL;AACEa,MAAAA,KAAK,CAACvB,IAAN,CAAWC,EAAX,GAAgBqB,MAAM,CAACL,IAAP,CAAYhB,EAA5B;AACAsB,MAAAA,KAAK,CAACvB,IAAN,CAAWE,QAAX,GAAsBoB,MAAM,CAACL,IAAP,CAAYf,QAAlC;AACA;;AACF,SAAKS,cAAL;AACE;;AACF,SAAKC,cAAL;AACEW,MAAAA,KAAK,CAACvB,IAAN,CAAWwB,UAAX,GAAwBF,MAAM,CAACG,KAA/B;AACA;;AACF,SAAKlB,eAAL;AACEgB,MAAAA,KAAK,CAACvB,IAAN,GAAasB,MAAM,CAACL,IAApB;AACA;;AACF,SAAKT,eAAL;AACE;;AACF,SAAKC,eAAL;AACEc,MAAAA,KAAK,CAACvB,IAAN,CAAWwB,UAAX,GAAwBF,MAAM,CAACG,KAA/B;AACA;;AACF,SAAKZ,eAAL;AACEU,MAAAA,KAAK,CAACvB,IAAN,GAAa;AACXC,QAAAA,EAAE,EAAE,IADO;AACDC,QAAAA,QAAQ,EAAE,IADT;AACeC,QAAAA,QAAQ,EAAE,IADzB;AAEXC,QAAAA,KAAK,EAAE,IAFI;AAEEC,QAAAA,KAAK,EAAE,IAFT;AAEeC,QAAAA,UAAU,EAAE;AAF3B,OAAb;AAIA;;AACF,SAAKQ,eAAL;AACE;;AACF,SAAKC,eAAL;AACE;;AACF;AACE;AA7BJ;AA+BD,CAhCwD,CAAzD;;AAkCA,eAAeK,OAAf","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  info: {\r\n    id: null,\r\n    password: null,\r\n    nickname: null,\r\n    email: null,\r\n    grade: null,\r\n    department: null,\r\n  },\r\n};\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const loginRequestAction = (data) => ({\r\n  type: LOG_IN_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const joinRequestAction = (data) => ({\r\n  type: SIGN_UP_REQUEST,\r\n  data,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST:\r\n      draft.info.id = action.data.id;\r\n      draft.info.password = action.data.password;\r\n      break;\r\n    case LOG_IN_SUCCESS:\r\n      break;\r\n    case LOG_IN_FAILURE:\r\n      draft.info.logInError = action.error;\r\n      break;\r\n    case SIGN_UP_REQUEST:\r\n      draft.info = action.data;\r\n      break;\r\n    case SIGN_UP_SUCCESS:\r\n      break;\r\n    case SIGN_UP_FAILURE:\r\n      draft.info.logInError = action.error;\r\n      break;\r\n    case LOG_OUT_REQUEST:\r\n      draft.info = {\r\n        id: null, password: null, nickname: null,\r\n        email: null, grade: null, department: null,\r\n      };\r\n      break;\r\n    case LOG_OUT_SUCCESS:\r\n      break;\r\n    case LOG_OUT_FAILURE:\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}