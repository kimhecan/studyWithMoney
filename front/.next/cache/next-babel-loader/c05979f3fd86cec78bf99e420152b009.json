{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\TodoList\\\\front\\\\components\\\\postForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\nvar TextArea = Input.TextArea;\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths;\n\n  var onFinish = function onFinish(values) {\n    console.log(values);\n    var formData = new FormData();\n    formData.append('title', values.title);\n    formData.append('content', values.content);\n    imagePaths.forEach(function (p) {\n      formData.append('image', p);\n    });\n    console.log(formData.title);\n    console.log(formData.content);\n    console.log(formData.image);\n    form.resetFields();\n  };\n\n  var onFinishFailed = function onFinishFailed(errorInfo) {\n    console.log('Failed:', errorInfo);\n  };\n\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    console.log('images', e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }); // map 안에 데이터를 함수에 넣고 싶으면 고차함수 사용\n\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index\n      });\n    };\n  });\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    name: \"basic\",\n    form: form,\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(Form.Item, {\n    name: \"title\",\n    rules: [{\n      required: true,\n      message: '제목을 입력해 주세요!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    placeholder: \"\\uAE00 \\uC81C\\uBAA9\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    name: \"content\",\n    rules: [{\n      required: true,\n      message: '내용을 입력해주세요!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(TextArea, {\n    rows: 4,\n    placeholder: \"\\uC5EC\\uAE30\\uB97C \\uB20C\\uB7EC\\uC11C \\uAE00\\uC744 \\uC791\\uC131\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      flex: '1'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"\\uAC8C\\uC2DC\\uD558\\uAE30\")), __jsx(Form.Item, {\n    style: {\n      flex: '1'\n    },\n    name: \"image\",\n    valuePropName: \"fileList\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, imagePaths.map(function (v, i) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block',\n        width: '280px',\n        borderRadius: '5px',\n        border: '1px solid #c0c0c0',\n        padding: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      src: \"http://localhost:3065/\".concat(v),\n      style: {\n        width: '100px'\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }), __jsx(DeleteOutlined, {\n      onClick: onRemoveImage(i),\n      style: {\n        marginLeft: '130px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }));\n  }))))));\n};\n\n_s(PostForm, \"gL8rLG/riGWlj3C9EcAEST03/j0=\", false, function () {\n  return [useDispatch, Form.useForm, useSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/components/postForm.js"],"names":["React","useCallback","useEffect","useRef","useDispatch","useSelector","Form","Input","Button","DeleteOutlined","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","TextArea","PostForm","dispatch","useForm","form","state","post","imagePaths","onFinish","values","console","log","formData","FormData","append","title","content","forEach","p","image","resetFields","onFinishFailed","errorInfo","imageInput","onClickImageUpload","current","click","onChangeImages","e","target","files","imageFormData","call","f","type","data","onRemoveImage","index","required","message","display","flexDirection","flex","map","v","i","width","borderRadius","border","padding","marginLeft"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport { UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst PostForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [form] = Form.useForm();\r\n  const { imagePaths } = useSelector((state) => state.post);\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n\r\n    const formData = new FormData();\r\n    formData.append('title', values.title);\r\n    formData.append('content', values.content);\r\n    imagePaths.forEach((p) => {\r\n      formData.append('image', p);\r\n    });\r\n    console.log(formData.title);\r\n    console.log(formData.content);\r\n    console.log(formData.image);\r\n\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const imageInput = useRef();\r\n\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n\r\n  const onChangeImages = useCallback((e) => {\r\n    console.log('images', e.target.files);\r\n    const imageFormData = new FormData();\r\n    [].forEach.call(e.target.files, (f) => {\r\n      imageFormData.append('image', f);\r\n    });\r\n    dispatch({\r\n      type: UPLOAD_IMAGES_REQUEST,\r\n      data: imageFormData,\r\n    });\r\n  });\r\n\r\n  // map 안에 데이터를 함수에 넣고 싶으면 고차함수 사용\r\n  const onRemoveImage = useCallback((index) => () => {\r\n    dispatch({\r\n      type: REMOVE_IMAGE,\r\n      data: index,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Form name=\"basic\" form={form} onFinish={onFinish} onFinishFailed={onFinishFailed}>\r\n        <Form.Item name=\"title\" rules={[{ required: true, message: '제목을 입력해 주세요!' }]}>\r\n          <Input placeholder=\"글 제목\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"content\" rules={[{ required: true, message: '내용을 입력해주세요!' }]}>\r\n          <TextArea rows={4} placeholder=\"여기를 눌러서 글을 작성할 수 있습니다\" />\r\n        </Form.Item>\r\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n          <Form.Item style={{ flex: '1' }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              게시하기\r\n            </Button>\r\n          </Form.Item>\r\n          <Form.Item style={{ flex: '1' }} name=\"image\" valuePropName=\"fileList\">\r\n            <input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages} />\r\n            <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n            <div>\r\n              {imagePaths.map((v, i) => (\r\n                <div key={v} style={{ display: 'inline-block', width: '280px', borderRadius: '5px', border: '1px solid #c0c0c0', padding: '10px' }}>\r\n                  <img src={`http://localhost:3065/${v}`} style={{ width: '100px' }} alt={v} />\r\n                  <DeleteOutlined onClick={onRemoveImage(i)} style={{ marginLeft: '130px' }} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Form.Item>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}