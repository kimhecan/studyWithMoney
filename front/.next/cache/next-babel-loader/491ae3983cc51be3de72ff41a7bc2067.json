{"ast":null,"code":"import produce from 'immer';\nimport faker from 'faker';\nimport shortId from 'shortId';\nexport const initialState = {\n  id: null,\n  password: null,\n  nickname: null,\n  email: null,\n  grade: null,\n  department: null\n};\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n});\nexport const joinRequestAction = data => ({\n  type: SIGN_UP_REQUEST,\n  data\n});\nexport const dummyUser = number => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  nickname: faker.name.findName()\n}));\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      draft.id = action.data.id;\n      draft.password = action.data.password;\n      break;\n\n    case LOG_IN_SUCCESS:\n      draft.user = dummyUser(action.data);\n      break;\n\n    case LOG_IN_FAILURE:\n      draft.logInError = action.error;\n      break;\n\n    case SIGN_UP_REQUEST:\n      draft.id = action.data.id;\n      draft.password = action.data.password;\n      draft.nickname = action.data.nickname;\n      draft.email = action.data.email;\n      draft.grade = action.data.grade;\n      draft.department = action.data.department;\n      break;\n\n    case SIGN_UP_SUCCESS:\n      draft.user = dummyUser(action.data);\n      break;\n\n    case SIGN_UP_FAILURE:\n      draft.logInError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/reducers/user.js"],"names":["produce","faker","shortId","initialState","id","password","nickname","email","grade","department","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","loginRequestAction","data","type","joinRequestAction","dummyUser","number","Array","fill","map","generate","name","findName","reducer","state","action","draft","user","logInError","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,EAAE,EAAE,IADsB;AAE1BC,EAAAA,QAAQ,EAAE,IAFgB;AAG1BC,EAAAA,QAAQ,EAAE,IAHgB;AAI1BC,EAAAA,KAAK,EAAE,IAJmB;AAK1BC,EAAAA,KAAK,EAAE,IALmB;AAM1BC,EAAAA,UAAU,EAAE;AANc,CAArB;AAUP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,KAAW;AAC3CC,EAAAA,IAAI,EAAEL,cADqC;AAE3CI,EAAAA;AAF2C,CAAX,CAA3B;AAKP,OAAO,MAAME,iBAAiB,GAAIF,IAAD,KAAW;AAC1CC,EAAAA,IAAI,EAAER,eADoC;AAE1CO,EAAAA;AAF0C,CAAX,CAA1B;AAKP,OAAO,MAAMG,SAAS,GAAIC,MAAD,IAAYC,KAAK,CAACD,MAAD,CAAL,CAAcE,IAAd,GAAqBC,GAArB,CAAyB,OAAO;AACnEpB,EAAAA,EAAE,EAAEF,OAAO,CAACuB,QAAR,EAD+D;AAEnEnB,EAAAA,QAAQ,EAAEL,KAAK,CAACyB,IAAN,CAAWC,QAAX;AAFyD,CAAP,CAAzB,CAA9B;;AAKP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG1B,YAAT,EAAuB2B,MAAvB,KAAkC9B,OAAO,CAAC6B,KAAD,EAASE,KAAD,IAAW;AAC1E,UAAQD,MAAM,CAACZ,IAAf;AACE,SAAKL,cAAL;AACEkB,MAAAA,KAAK,CAAC3B,EAAN,GAAW0B,MAAM,CAACb,IAAP,CAAYb,EAAvB;AACA2B,MAAAA,KAAK,CAAC1B,QAAN,GAAiByB,MAAM,CAACb,IAAP,CAAYZ,QAA7B;AACA;;AACF,SAAKS,cAAL;AACEiB,MAAAA,KAAK,CAACC,IAAN,GAAaZ,SAAS,CAACU,MAAM,CAACb,IAAR,CAAtB;AACA;;AACF,SAAKF,cAAL;AACEgB,MAAAA,KAAK,CAACE,UAAN,GAAmBH,MAAM,CAACI,KAA1B;AACA;;AACF,SAAKxB,eAAL;AACEqB,MAAAA,KAAK,CAAC3B,EAAN,GAAW0B,MAAM,CAACb,IAAP,CAAYb,EAAvB;AACA2B,MAAAA,KAAK,CAAC1B,QAAN,GAAiByB,MAAM,CAACb,IAAP,CAAYZ,QAA7B;AACA0B,MAAAA,KAAK,CAACzB,QAAN,GAAiBwB,MAAM,CAACb,IAAP,CAAYX,QAA7B;AACAyB,MAAAA,KAAK,CAACxB,KAAN,GAAcuB,MAAM,CAACb,IAAP,CAAYV,KAA1B;AACAwB,MAAAA,KAAK,CAACvB,KAAN,GAAcsB,MAAM,CAACb,IAAP,CAAYT,KAA1B;AACAuB,MAAAA,KAAK,CAACtB,UAAN,GAAmBqB,MAAM,CAACb,IAAP,CAAYR,UAA/B;AACA;;AACF,SAAKE,eAAL;AACEoB,MAAAA,KAAK,CAACC,IAAN,GAAaZ,SAAS,CAACU,MAAM,CAACb,IAAR,CAAtB;AACA;;AACF,SAAKL,eAAL;AACEmB,MAAAA,KAAK,CAACE,UAAN,GAAmBH,MAAM,CAACI,KAA1B;AACA;;AACF;AACE;AA1BJ;AA4BD,CA7BwD,CAAzD;;AA+BA,eAAeN,OAAf","sourcesContent":["import produce from 'immer';\r\nimport faker from 'faker';\r\nimport shortId from 'shortId';\r\n\r\nexport const initialState = {\r\n  id: null,\r\n  password: null,\r\n  nickname: null,\r\n  email: null,\r\n  grade: null,\r\n  department: null,\r\n\r\n};\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const loginRequestAction = (data) => ({\r\n  type: LOG_IN_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const joinRequestAction = (data) => ({\r\n  type: SIGN_UP_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const dummyUser = (number) => Array(number).fill().map(() => ({\r\n  id: shortId.generate(),\r\n  nickname: faker.name.findName(),\r\n}));\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST:\r\n      draft.id = action.data.id;\r\n      draft.password = action.data.password;\r\n      break;\r\n    case LOG_IN_SUCCESS:\r\n      draft.user = dummyUser(action.data);\r\n      break;\r\n    case LOG_IN_FAILURE:\r\n      draft.logInError = action.error;\r\n      break;\r\n    case SIGN_UP_REQUEST:\r\n      draft.id = action.data.id;\r\n      draft.password = action.data.password;\r\n      draft.nickname = action.data.nickname;\r\n      draft.email = action.data.email;\r\n      draft.grade = action.data.grade;\r\n      draft.department = action.data.department;\r\n      break;\r\n    case SIGN_UP_SUCCESS:\r\n      draft.user = dummyUser(action.data);\r\n      break;\r\n    case SIGN_UP_FAILURE:\r\n      draft.logInError = action.error;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}