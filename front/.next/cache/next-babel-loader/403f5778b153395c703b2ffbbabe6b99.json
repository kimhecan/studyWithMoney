{"ast":null,"code":"import { takeLatest, call, put, fork, all } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE } from '../reducers/user';\n\nfunction signUpAPI(data) {\n  // 가입하기\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result.data, 'signUpdata');\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e.response.data\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n} //---------------------------------------------------------------\n\n\nfunction LogInAPI(data) {\n  // 로그인하기\n  return axios.post('/user/login', data);\n}\n\nfunction* LogIn(action) {\n  try {\n    const result = yield call(LogInAPI, action.data);\n    console.log(result, '로그인정보');\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: e.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, LogIn);\n} //---------------------------------------------------------------\n\n\nfunction LogOutAPI() {\n  // 로그아웃하기\n  return axios.post('/user/logout');\n}\n\nfunction* LogOut() {\n  try {\n    const result = yield call(LogOutAPI);\n    console.log(result, '로그인정보');\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: e.response.data\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, LogOut);\n} //-----------------------------------------------------------------\n\n\nfunction LoadUserAPI() {\n  // 유저정보 불러오기\n  return axios.get('/user');\n}\n\nfunction* LoadUser() {\n  try {\n    const result = yield call(LoadUserAPI);\n    console.log(result, '로그인정보');\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: e.response.data\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, LoadUser);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchLoadUser)]);\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/sagas/user.js"],"names":["takeLatest","call","put","fork","all","axios","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","signUpAPI","data","post","signUp","action","result","console","log","type","e","error","response","watchSignUp","LogInAPI","LogIn","watchLogIn","LogOutAPI","LogOut","watchLogOut","LoadUserAPI","get","LoadUser","watchLoadUser","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest, call, put, fork, all } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\r\n  LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\r\n  LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n  LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE,\r\n} from '../reducers/user';\r\n\r\nfunction signUpAPI(data) { // 가입하기\r\n  return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    const result = yield call(signUpAPI, action.data);\r\n    console.log(result.data, 'signUpdata');\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n//---------------------------------------------------------------\r\n\r\nfunction LogInAPI(data) { // 로그인하기\r\n  return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* LogIn(action) {\r\n  try {\r\n    const result = yield call(LogInAPI, action.data);\r\n    console.log(result, '로그인정보');\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, LogIn);\r\n}\r\n//---------------------------------------------------------------\r\nfunction LogOutAPI() { // 로그아웃하기\r\n  return axios.post('/user/logout');\r\n}\r\n\r\nfunction* LogOut() {\r\n  try {\r\n    const result = yield call(LogOutAPI);\r\n    console.log(result, '로그인정보');\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, LogOut);\r\n}\r\n\r\n//-----------------------------------------------------------------\r\nfunction LoadUserAPI() { // 유저정보 불러오기\r\n  return axios.get('/user');\r\n}\r\n\r\nfunction* LoadUser() {\r\n  try {\r\n    const result = yield call(LoadUserAPI);\r\n    console.log(result, '로그인정보');\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeLatest(LOAD_USER_REQUEST, LoadUser);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n    fork(watchLoadUser),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}