{"ast":null,"code":"import { takeLatest, call, put, fork, all } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE } from '../reducers/post';\n\nfunction LoadUserAPI(data) {\n  // 포스트 추가하기\n  return axios.post('/post', data);\n}\n\nfunction* LoadUser(action) {\n  try {\n    const result = yield call(LoadUserAPI, action.data);\n    console.log(result.data, '유저정보불러오기');\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, LoadUser);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost) //fork(watchLoadPost),\n  //fork(watchUpdatePost),\n  //fork(watchDeletePost),\n  ]);\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/sagas/post.js"],"names":["takeLatest","call","put","fork","all","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LoadUserAPI","data","post","LoadUser","action","result","console","log","type","e","error","response","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsCC,GAAtC,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,QAAqE,kBAArE;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AAAE;AAC3B,SAAOL,KAAK,CAACM,IAAN,CAAW,OAAX,EAAoBD,IAApB,CAAP;AACD;;AAED,UAAUE,QAAV,CAAmBC,MAAnB,EAA2B;AACzB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMb,IAAI,CAACQ,WAAD,EAAcI,MAAM,CAACH,IAArB,CAAzB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACJ,IAAnB,EAAyB,UAAzB;AACA,UAAMR,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEV,gBADE;AAERG,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOQ,CAAP,EAAU;AACVH,IAAAA,OAAO,CAACI,KAAR,CAAcD,CAAd;AACA,UAAMhB,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAET,gBADE;AAERW,MAAAA,KAAK,EAAED,CAAC,CAACE,QAAF,CAAWV;AAFV,KAAD,CAAT;AAID;AACF;;AAED,UAAUW,YAAV,GAAyB;AACvB,QAAMrB,UAAU,CAACM,gBAAD,EAAmBM,QAAnB,CAAhB;AACD;;AAED,eAAe,UAAUU,QAAV,GAAqB;AAClC,QAAMlB,GAAG,CAAC,CACRD,IAAI,CAACkB,YAAD,CADI,CAER;AACA;AACA;AAJQ,GAAD,CAAT;AAMD","sourcesContent":["import { takeLatest, call, put, fork, all } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE } from '../reducers/post';\r\n\r\nfunction LoadUserAPI(data) { // 포스트 추가하기\r\n  return axios.post('/post', data);\r\n}\r\n\r\nfunction* LoadUser(action) {\r\n  try {\r\n    const result = yield call(LoadUserAPI, action.data);\r\n    console.log(result.data, '유저정보불러오기');\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, LoadUser);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    //fork(watchLoadPost),\r\n    //fork(watchUpdatePost),\r\n    //fork(watchDeletePost),\r\n  ]);\r\n}"]},"metadata":{},"sourceType":"module"}