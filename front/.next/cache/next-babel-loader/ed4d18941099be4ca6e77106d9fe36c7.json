{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  info: {},\n  signUpMessage: null,\n  logInMessage: null\n};\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const RESET_SIGN_UP_MESSAGE = 'RESET_SIGN_UP_MESSAGE';\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n});\nexport const joinRequestAction = data => ({\n  type: SIGN_UP_REQUEST,\n  data\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case SIGN_UP_REQUEST:\n      break;\n\n    case SIGN_UP_SUCCESS:\n      draft.signUpMessage = action.data;\n      break;\n\n    case SIGN_UP_FAILURE:\n      draft.signUpMessage = action.error;\n      break;\n\n    case LOG_IN_REQUEST:\n      break;\n\n    case LOG_IN_SUCCESS:\n      draft.info = action.data;\n      break;\n\n    case LOG_IN_FAILURE:\n      draft.logInMessage = action.error;\n      break;\n\n    case LOG_OUT_REQUEST:\n      break;\n\n    case LOG_OUT_SUCCESS:\n      draft.info = {};\n      break;\n\n    case LOG_OUT_FAILURE:\n      break;\n\n    case RESET_SIGN_UP_MESSAGE:\n      draft.signUpMessage = null;\n      breakl;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/reducers/user.js"],"names":["produce","initialState","info","signUpMessage","logInMessage","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","RESET_SIGN_UP_MESSAGE","loginRequestAction","data","type","joinRequestAction","reducer","state","action","draft","error","breakl"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE,EADoB;AAE1BC,EAAAA,aAAa,EAAE,IAFW;AAG1BC,EAAAA,YAAY,EAAE;AAHY,CAArB;AAOP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,KAAW;AAC3CC,EAAAA,IAAI,EAAET,cADqC;AAE3CQ,EAAAA;AAF2C,CAAX,CAA3B;AAKP,OAAO,MAAME,iBAAiB,GAAIF,IAAD,KAAW;AAC1CC,EAAAA,IAAI,EAAEZ,eADoC;AAE1CW,EAAAA;AAF0C,CAAX,CAA1B;;AAKP,MAAMG,OAAO,GAAG,CAACC,KAAK,GAAGnB,YAAT,EAAuBoB,MAAvB,KAAkCrB,OAAO,CAACoB,KAAD,EAASE,KAAD,IAAW;AAC1E,UAAQD,MAAM,CAACJ,IAAf;AACE,SAAKZ,eAAL;AACE;;AACF,SAAKC,eAAL;AACEgB,MAAAA,KAAK,CAACnB,aAAN,GAAsBkB,MAAM,CAACL,IAA7B;AACA;;AACF,SAAKT,eAAL;AACEe,MAAAA,KAAK,CAACnB,aAAN,GAAsBkB,MAAM,CAACE,KAA7B;AACA;;AACF,SAAKf,cAAL;AACE;;AACF,SAAKC,cAAL;AACEa,MAAAA,KAAK,CAACpB,IAAN,GAAamB,MAAM,CAACL,IAApB;AACA;;AACF,SAAKN,cAAL;AACEY,MAAAA,KAAK,CAAClB,YAAN,GAAqBiB,MAAM,CAACE,KAA5B;AACA;;AACF,SAAKZ,eAAL;AACE;;AACF,SAAKC,eAAL;AACEU,MAAAA,KAAK,CAACpB,IAAN,GAAa,EAAb;AACA;;AACF,SAAKW,eAAL;AACE;;AACF,SAAKC,qBAAL;AACEQ,MAAAA,KAAK,CAACnB,aAAN,GAAsB,IAAtB;AACAqB,MAAAA,MAAM;;AACR;AACE;AA5BJ;AA8BD,CA/BwD,CAAzD;;AAiCA,eAAeL,OAAf","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  info: {},\r\n  signUpMessage: null,\r\n  logInMessage: null,\r\n\r\n};\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const RESET_SIGN_UP_MESSAGE = 'RESET_SIGN_UP_MESSAGE';\r\n\r\nexport const loginRequestAction = (data) => ({\r\n  type: LOG_IN_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const joinRequestAction = (data) => ({\r\n  type: SIGN_UP_REQUEST,\r\n  data,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case SIGN_UP_REQUEST:\r\n      break;\r\n    case SIGN_UP_SUCCESS:\r\n      draft.signUpMessage = action.data;\r\n      break;\r\n    case SIGN_UP_FAILURE:\r\n      draft.signUpMessage = action.error;\r\n      break;\r\n    case LOG_IN_REQUEST:\r\n      break;\r\n    case LOG_IN_SUCCESS:\r\n      draft.info = action.data;\r\n      break;\r\n    case LOG_IN_FAILURE:\r\n      draft.logInMessage = action.error;\r\n      break;\r\n    case LOG_OUT_REQUEST:\r\n      break;\r\n    case LOG_OUT_SUCCESS:\r\n      draft.info = {};\r\n      break;\r\n    case LOG_OUT_FAILURE:\r\n      break;\r\n    case RESET_SIGN_UP_MESSAGE:\r\n      draft.signUpMessage = null;\r\n      breakl\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}