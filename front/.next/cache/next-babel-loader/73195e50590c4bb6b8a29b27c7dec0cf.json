{"ast":null,"code":"import produce from 'immer';\nimport faker from 'faker';\nimport shortId from 'shortId';\nexport var initialState = {\n  id: null,\n  email: null,\n  nickname: null,\n  password: null\n};\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var dummyUser = function dummyUser(number) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shortId.generate(),\n      nickname: faker.name.findName()\n    };\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        draft.id = action.data.id;\n        draft.password = action.data.password;\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.user = dummyUser(action.data);\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/reducers/user.js"],"names":["produce","faker","shortId","initialState","id","email","nickname","password","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","loginRequestAction","data","type","dummyUser","number","Array","fill","map","generate","name","findName","reducer","state","action","draft","user","logInError","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,EAAE,EAAE,IADsB;AAE1BC,EAAAA,KAAK,EAAE,IAFmB;AAG1BC,EAAAA,QAAQ,EAAE,IAHgB;AAI1BC,EAAAA,QAAQ,EAAE;AAJgB,CAArB;AAOP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD;AAAA,SAAW;AAC3CC,IAAAA,IAAI,EAAEL,cADqC;AAE3CI,IAAAA,IAAI,EAAJA;AAF2C,GAAX;AAAA,CAA3B;AAKP,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD;AAAA,SAAYC,KAAK,CAACD,MAAD,CAAL,CAAcE,IAAd,GAAqBC,GAArB,CAAyB;AAAA,WAAO;AACnEjB,MAAAA,EAAE,EAAEF,OAAO,CAACoB,QAAR,EAD+D;AAEnEhB,MAAAA,QAAQ,EAAEL,KAAK,CAACsB,IAAN,CAAWC,QAAX;AAFyD,KAAP;AAAA,GAAzB,CAAZ;AAAA,CAAlB;;AAKP,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,MAACC,KAAD,uEAASvB,YAAT;AAAA,MAAuBwB,MAAvB;AAAA,SAAkC3B,OAAO,CAAC0B,KAAD,EAAQ,UAACE,KAAD,EAAW;AAC1E,YAAQD,MAAM,CAACX,IAAf;AACE,WAAKL,cAAL;AACEiB,QAAAA,KAAK,CAACxB,EAAN,GAAWuB,MAAM,CAACZ,IAAP,CAAYX,EAAvB;AACAwB,QAAAA,KAAK,CAACrB,QAAN,GAAiBoB,MAAM,CAACZ,IAAP,CAAYR,QAA7B;AACA;;AACF,WAAKK,cAAL;AACEgB,QAAAA,KAAK,CAACC,IAAN,GAAaZ,SAAS,CAACU,MAAM,CAACZ,IAAR,CAAtB;AACA;;AACF,WAAKF,cAAL;AACEe,QAAAA,KAAK,CAACE,UAAN,GAAmBH,MAAM,CAACI,KAA1B;AACA;;AACF;AACE;AAZJ;AAcD,GAfwD,CAAzC;AAAA,CAAhB;;AAiBA,eAAeN,OAAf","sourcesContent":["import produce from 'immer';\r\nimport faker from 'faker';\r\nimport shortId from 'shortId';\r\n\r\nexport const initialState = {\r\n  id: null,\r\n  email: null,\r\n  nickname: null,\r\n  password: null,\r\n};\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const loginRequestAction = (data) => ({\r\n  type: LOG_IN_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const dummyUser = (number) => Array(number).fill().map(() => ({\r\n  id: shortId.generate(),\r\n  nickname: faker.name.findName(),\r\n}));\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST:\r\n      draft.id = action.data.id;\r\n      draft.password = action.data.password;\r\n      break;\r\n    case LOG_IN_SUCCESS:\r\n      draft.user = dummyUser(action.data);\r\n      break;\r\n    case LOG_IN_FAILURE:\r\n      draft.logInError = action.error;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}