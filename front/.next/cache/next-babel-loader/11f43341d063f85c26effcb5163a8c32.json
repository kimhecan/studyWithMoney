{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\TodoList\\\\front\\\\components\\\\loginForm.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\n\nconst LoginForm = () => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  console.log(watch('example')); // watch input value by passing the name of it\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    name: \"email\",\n    defaultValue: \"enter email\",\n    ref: register({\n      pattern: /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/g,\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    name: \"password\",\n    defaultValue: \"enter email\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), errors.exampleRequired && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 36\n    }\n  }, \"This field is required\"), __jsx(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/components/loginForm.js"],"names":["React","useForm","LoginForm","register","handleSubmit","watch","errors","onSubmit","data","console","log","pattern","required","exampleRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAA4CL,OAAO,EAAzD;;AACA,QAAMM,QAAQ,GAAIC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAA3B;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAAC,SAAD,CAAjB,EAJsB,CAIS;;AAE/B,SACE,4BAEE;AAAM,IAAA,QAAQ,EAAED,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,YAAY,EAAC,aAAjC;AAA+C,IAAA,GAAG,EAAEJ,QAAQ,CAAC;AAAEQ,MAAAA,OAAO,EAAE,6DAAX;AAA0EC,MAAAA,QAAQ,EAAE;AAApF,KAAD,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,YAAY,EAAC,aAApC;AAAkD,IAAA,GAAG,EAAET,QAAQ,CAAC;AAAES,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAMGN,MAAM,CAACO,eAAP,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAN7B,EAOE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFF,CADF;AAcD,CApBD;;AAsBA,eAAeX,SAAf","sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst LoginForm = () => {\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  const onSubmit = (data) => console.log(data);\r\n\r\n  console.log(watch('example')); // watch input value by passing the name of it\r\n\r\n  return (\r\n    <>\r\n      {/* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */}\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {/* register your input into the hook by invoking the \"register\" function */}\r\n        <input name=\"email\" defaultValue=\"enter email\" ref={register({ pattern: /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/g, required: true })} />\r\n        {/* include validation with required or other standard HTML validation rules */}\r\n        <input name=\"password\" defaultValue=\"enter email\" ref={register({ required: true })} />\r\n        {/* errors will return when field validation fails  */}\r\n        {errors.exampleRequired && <span>This field is required</span>}\r\n        <input type=\"submit\" />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}