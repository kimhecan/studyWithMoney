{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  postInfos: [],\n  imagePaths: [],\n  addPostMessage: null,\n  hasMorePosts: true\n};\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const LOAD_POSTS_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POST_FAILURE';\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\nexport const DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nexport const DELETE_POST_FAILURE = 'DELETE_POST_FAILURE';\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n}); // export const addComment = (data) => ({\n//   type: ADD_COMMENT_REQUEST,\n//   data,\n// });\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.postInfos.unshift(action.data);\n      draft.imagePaths = [];\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostMessage = action.error;\n      break;\n\n    case LOAD_POSTS_REQUEST:\n      break;\n\n    case LOAD_POSTS_SUCCESS:\n      draft.postInfos = draft.postInfos.concat(action.data);\n      draft.hasMorePosts = action.data.length === 10;\n      break;\n\n    case LOAD_POSTS_FAILURE:\n      break;\n\n    case UPDATE_POST_REQUEST:\n      break;\n\n    case UPDATE_POST_SUCCESS:\n      break;\n\n    case UPDATE_POST_FAILURE:\n      break;\n\n    case DELETE_POST_REQUEST:\n      break;\n\n    case DELETE_POST_SUCCESS:\n      break;\n\n    case DELETE_POST_FAILURE:\n      break;\n\n    case UPLOAD_IMAGES_REQUEST:\n      break;\n\n    case UPLOAD_IMAGES_SUCCESS:\n      draft.imagePaths = action.data;\n      break;\n\n    case UPLOAD_IMAGES_FAILURE:\n      break;\n\n    case REMOVE_IMAGE:\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/reducers/post.js"],"names":["produce","initialState","postInfos","imagePaths","addPostMessage","hasMorePosts","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","addPost","data","type","reducer","state","action","draft","unshift","error","concat","length","filter","v","i"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,EADe;AAE1BC,EAAAA,UAAU,EAAE,EAFc;AAG1BC,EAAAA,cAAc,EAAE,IAHU;AAI1BC,EAAAA,YAAY,EAAE;AAJY,CAArB;AAOP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,kBAAkB,GAAG,mBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,mBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,mBAA3B;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AAIP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAGP,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;AAChCC,EAAAA,IAAI,EAAElB,gBAD0B;AAEhCiB,EAAAA;AAFgC,CAAX,CAAhB,C,CAKP;AACA;AACA;AACA;;AAGA,MAAME,OAAO,GAAG,CAACC,KAAK,GAAGzB,YAAT,EAAuB0B,MAAvB,KAAkC3B,OAAO,CAAC0B,KAAD,EAASE,KAAD,IAAW;AAC1E,UAAQD,MAAM,CAACH,IAAf;AACE,SAAKlB,gBAAL;AACE;;AACF,SAAKC,gBAAL;AACEqB,MAAAA,KAAK,CAAC1B,SAAN,CAAgB2B,OAAhB,CAAwBF,MAAM,CAACJ,IAA/B;AACAK,MAAAA,KAAK,CAACzB,UAAN,GAAmB,EAAnB;AACA;;AACF,SAAKK,gBAAL;AACEoB,MAAAA,KAAK,CAACxB,cAAN,GAAuBuB,MAAM,CAACG,KAA9B;AACA;;AACF,SAAKrB,kBAAL;AACE;;AACF,SAAKC,kBAAL;AACEkB,MAAAA,KAAK,CAAC1B,SAAN,GAAkB0B,KAAK,CAAC1B,SAAN,CAAgB6B,MAAhB,CAAuBJ,MAAM,CAACJ,IAA9B,CAAlB;AACAK,MAAAA,KAAK,CAACvB,YAAN,GAAqBsB,MAAM,CAACJ,IAAP,CAAYS,MAAZ,KAAuB,EAA5C;AACA;;AACF,SAAKrB,kBAAL;AACE;;AACF,SAAKC,mBAAL;AACE;;AACF,SAAKC,mBAAL;AACE;;AACF,SAAKC,mBAAL;AACE;;AACF,SAAKC,mBAAL;AACE;;AACF,SAAKC,mBAAL;AACE;;AACF,SAAKC,mBAAL;AACE;;AACF,SAAKC,qBAAL;AACE;;AACF,SAAKC,qBAAL;AACES,MAAAA,KAAK,CAACzB,UAAN,GAAmBwB,MAAM,CAACJ,IAA1B;AACA;;AACF,SAAKH,qBAAL;AACE;;AACF,SAAKC,YAAL;AACEO,MAAAA,KAAK,CAACzB,UAAN,GAAmByB,KAAK,CAACzB,UAAN,CAAiB8B,MAAjB,CAAwB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,KAAKR,MAAM,CAACJ,IAA/C,CAAnB;AACA;;AACF;AACE;AAzCJ;AA2CD,CA5CwD,CAAzD;;AA8CA,eAAeE,OAAf","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  postInfos: [],\r\n  imagePaths: [],\r\n  addPostMessage: null,\r\n  hasMorePosts: true,\r\n};\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POST_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\r\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\r\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\r\n\r\nexport const DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\r\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\r\nexport const DELETE_POST_FAILURE = 'DELETE_POST_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\n\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\n// export const addComment = (data) => ({\r\n//   type: ADD_COMMENT_REQUEST,\r\n//   data,\r\n// });\r\n\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case ADD_POST_REQUEST:\r\n      break;\r\n    case ADD_POST_SUCCESS:\r\n      draft.postInfos.unshift(action.data);\r\n      draft.imagePaths = [];\r\n      break;\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostMessage = action.error;\r\n      break;\r\n    case LOAD_POSTS_REQUEST:\r\n      break;\r\n    case LOAD_POSTS_SUCCESS:\r\n      draft.postInfos = draft.postInfos.concat(action.data);\r\n      draft.hasMorePosts = action.data.length === 10;\r\n      break;\r\n    case LOAD_POSTS_FAILURE:\r\n      break;\r\n    case UPDATE_POST_REQUEST:\r\n      break;\r\n    case UPDATE_POST_SUCCESS:\r\n      break;\r\n    case UPDATE_POST_FAILURE:\r\n      break;\r\n    case DELETE_POST_REQUEST:\r\n      break;\r\n    case DELETE_POST_SUCCESS:\r\n      break;\r\n    case DELETE_POST_FAILURE:\r\n      break;\r\n    case UPLOAD_IMAGES_REQUEST:\r\n      break;\r\n    case UPLOAD_IMAGES_SUCCESS:\r\n      draft.imagePaths = action.data;\r\n      break;\r\n    case UPLOAD_IMAGES_FAILURE:\r\n      break;\r\n    case REMOVE_IMAGE:\r\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}