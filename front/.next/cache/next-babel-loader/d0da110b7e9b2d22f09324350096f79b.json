{"ast":null,"code":"import produce from 'immer';\nexport var initialState = {\n  postInfos: [],\n  addPostMessage: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport var LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport var LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport var UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport var UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport var UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\nexport var DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\nexport var DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nexport var DELETE_POST_FAILURE = 'DELETE_POST_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n}; // export const addComment = (data) => ({\n//   type: ADD_COMMENT_REQUEST,\n//   data,\n// });\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.postInfos.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostMessage = action.error;\n        break;\n\n      case LOAD_POST_REQUEST:\n        break;\n\n      case LOAD_POST_SUCCESS:\n        break;\n\n      case LOAD_POST_FAILURE:\n        break;\n\n      case UPDATE_POST_REQUEST:\n        break;\n\n      case UPDATE_POST_SUCCESS:\n        break;\n\n      case UPDATE_POST_FAILURE:\n        break;\n\n      case DELETE_POST_REQUEST:\n        break;\n\n      case DELETE_POST_SUCCESS:\n        break;\n\n      case DELETE_POST_FAILURE:\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/reducers/post.js"],"names":["produce","initialState","postInfos","addPostMessage","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","addPost","data","type","reducer","state","action","draft","unshift","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,EADe;AAE1BC,EAAAA,cAAc,EAAE;AAFU,CAArB;AAKP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD;AAAA,SAAW;AAChCC,IAAAA,IAAI,EAAEd,gBAD0B;AAEhCa,IAAAA,IAAI,EAAJA;AAFgC,GAAX;AAAA,CAAhB,C,CAKP;AACA;AACA;AACA;;AAGA,IAAME,OAAO,GAAG,SAAVA,OAAU;AAAA,MAACC,KAAD,uEAASnB,YAAT;AAAA,MAAuBoB,MAAvB;AAAA,SAAkCrB,OAAO,CAACoB,KAAD,EAAQ,UAACE,KAAD,EAAW;AAC1E,YAAQD,MAAM,CAACH,IAAf;AACE,WAAKd,gBAAL;AACE;;AACF,WAAKC,gBAAL;AACEiB,QAAAA,KAAK,CAACpB,SAAN,CAAgBqB,OAAhB,CAAwBF,MAAM,CAACJ,IAA/B;AACA;;AACF,WAAKX,gBAAL;AACEgB,QAAAA,KAAK,CAACnB,cAAN,GAAuBkB,MAAM,CAACG,KAA9B;AACA;;AACF,WAAKjB,iBAAL;AACE;;AACF,WAAKC,iBAAL;AACE;;AACF,WAAKC,iBAAL;AACE;;AACF,WAAKC,mBAAL;AACE;;AACF,WAAKC,mBAAL;AACE;;AACF,WAAKC,mBAAL;AACE;;AACF,WAAKC,mBAAL;AACE;;AACF,WAAKC,mBAAL;AACE;;AACF,WAAKC,mBAAL;AACE;;AACF;AACE;AA5BJ;AA8BD,GA/BwD,CAAzC;AAAA,CAAhB;;AAiCA,eAAeI,OAAf","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  postInfos: [],\r\n  addPostMessage: null,\r\n};\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\r\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\r\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\r\n\r\nexport const DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\r\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\r\nexport const DELETE_POST_FAILURE = 'DELETE_POST_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\n// export const addComment = (data) => ({\r\n//   type: ADD_COMMENT_REQUEST,\r\n//   data,\r\n// });\r\n\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case ADD_POST_REQUEST:\r\n      break;\r\n    case ADD_POST_SUCCESS:\r\n      draft.postInfos.unshift(action.data);\r\n      break;\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostMessage = action.error;\r\n      break;\r\n    case LOAD_POST_REQUEST:\r\n      break;\r\n    case LOAD_POST_SUCCESS:\r\n      break;\r\n    case LOAD_POST_FAILURE:\r\n      break;\r\n    case UPDATE_POST_REQUEST:\r\n      break;\r\n    case UPDATE_POST_SUCCESS:\r\n      break;\r\n    case UPDATE_POST_FAILURE:\r\n      break;\r\n    case DELETE_POST_REQUEST:\r\n      break;\r\n    case DELETE_POST_SUCCESS:\r\n      break;\r\n    case DELETE_POST_FAILURE:\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}