{"ast":null,"code":"import produce from 'immer';\nimport faker from 'faker';\nimport shortId from 'shortId';\nexport var initialState = {\n  info: {\n    id: null,\n    password: null,\n    nickname: null,\n    email: null,\n    grade: null,\n    department: null\n  }\n};\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var joinRequestAction = function joinRequestAction(data) {\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n};\nexport var dummyUser = function dummyUser(number) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shortId.generate(),\n      nickname: faker.name.findName()\n    };\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        draft.info.id = action.data.id;\n        draft.info.password = action.data.password;\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.info.user = dummyUser(action.data);\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.info.logInError = action.error;\n        break;\n\n      case SIGN_UP_REQUEST:\n        draft.info = action.data;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.info.user = dummyUser(action.data);\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.info.logInError = action.error;\n        break;\n\n      case LOG_OUT_REQUEST:\n        draft.info = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        break;\n\n      case LOG_OUT_FAILURE:\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/reducers/user.js"],"names":["produce","faker","shortId","initialState","info","id","password","nickname","email","grade","department","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","loginRequestAction","data","type","joinRequestAction","dummyUser","number","Array","fill","map","generate","name","findName","reducer","state","action","draft","user","logInError","error"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\nimport faker from 'faker';\r\nimport shortId from 'shortId';\r\n\r\nexport const initialState = {\r\n  info: {\r\n    id: null,\r\n    password: null,\r\n    nickname: null,\r\n    email: null,\r\n    grade: null,\r\n    department: null,\r\n  },\r\n};\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\n\r\nexport const loginRequestAction = (data) => ({\r\n  type: LOG_IN_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const joinRequestAction = (data) => ({\r\n  type: SIGN_UP_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const dummyUser = (number) => Array(number).fill().map(() => ({\r\n  id: shortId.generate(),\r\n  nickname: faker.name.findName(),\r\n}));\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST:\r\n      draft.info.id = action.data.id;\r\n      draft.info.password = action.data.password;\r\n      break;\r\n    case LOG_IN_SUCCESS:\r\n      draft.info.user = dummyUser(action.data);\r\n      break;\r\n    case LOG_IN_FAILURE:\r\n      draft.info.logInError = action.error;\r\n      break;\r\n    case SIGN_UP_REQUEST:\r\n      draft.info = action.data;\r\n      break;\r\n    case SIGN_UP_SUCCESS:\r\n      draft.info.user = dummyUser(action.data);\r\n      break;\r\n    case SIGN_UP_FAILURE:\r\n      draft.info.logInError = action.error;\r\n      break;\r\n    case LOG_OUT_REQUEST:\r\n      draft.info = null;\r\n      break;\r\n    case LOG_OUT_SUCCESS:\r\n      break;\r\n    case LOG_OUT_FAILURE:\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}