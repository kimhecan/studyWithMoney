{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\TodoList\\\\front\\\\components\\\\loginForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      email = _useSelector.email;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    return console.log(data, 123);\n  };\n\n  console.log(watch('example')); // watch input value by passing the name of it\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    name: \"email\",\n    defaultValue: \"\",\n    ref: register({\n      pattern: /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/g,\n      required: true\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    name: \"password\",\n    defaultValue: \"\",\n    ref: register({\n      required: true\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), errors.exampleRequired && __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 36\n    }\n  }, \"This field is required\"), __jsx(\"input\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(LoginForm, \"tMB4/3UQBfhYqj24py7oDzRU5ho=\", false, function () {\n  return [useSelector, useForm];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/components/loginForm.js"],"names":["React","useForm","useSelector","LoginForm","state","user","email","register","handleSubmit","watch","errors","onSubmit","data","console","log","pattern","required","exampleRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,qBACJD,WAAW,CAAC,UAACE,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADP;AAAA,MACdC,KADc,gBACdA,KADc;;AAAA,iBAG4BL,OAAO,EAHnC;AAAA,MAGdM,QAHc,YAGdA,QAHc;AAAA,MAGJC,YAHI,YAGJA,YAHI;AAAA,MAGUC,KAHV,YAGUA,KAHV;AAAA,MAGiBC,MAHjB,YAGiBA,MAHjB;;AAItB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD;AAAA,WAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,GAAlB,CAAV;AAAA,GAAjB;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAAC,SAAD,CAAjB,EANsB,CAMS;;AAE/B,SACE,4BAEE;AAAM,IAAA,QAAQ,EAAED,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,YAAY,EAAC,EAAjC;AAAoC,IAAA,GAAG,EAAEJ,QAAQ,CAAC;AAAEQ,MAAAA,OAAO,EAAE,6DAAX;AAA0EC,MAAAA,QAAQ,EAAE;AAApF,KAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,YAAY,EAAC,EAApC;AAAuC,IAAA,GAAG,EAAET,QAAQ,CAAC;AAAES,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAMGN,MAAM,CAACO,eAAP,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAN7B,EAOE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFF,CADF;AAcD,CAtBD;;GAAMd,S;UACcD,W,EAEgCD,O;;;KAH9CE,S;AAwBN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst LoginForm = () => {\r\n  const { email } = useSelector((state) => state.user);\r\n\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  const onSubmit = (data) => console.log(data, 123);\r\n\r\n  console.log(watch('example')); // watch input value by passing the name of it\r\n\r\n  return (\r\n    <>\r\n      {/* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */}\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {/* register your input into the hook by invoking the \"register\" function */}\r\n        <input name=\"email\" defaultValue=\"\" ref={register({ pattern: /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/g, required: true })} />\r\n        {/* include validation with required or other standard HTML validation rules */}\r\n        <input name=\"password\" defaultValue=\"\" ref={register({ required: true })} />\r\n        {/* errors will return when field validation fails  */}\r\n        {errors.exampleRequired && <span>This field is required</span>}\r\n        <input type=\"submit\" />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}