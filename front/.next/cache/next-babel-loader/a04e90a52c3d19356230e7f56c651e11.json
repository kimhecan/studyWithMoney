{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\TodoList\\\\front\\\\components\\\\loginForm.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loginRequestAction } from '../reducers/user';\n\nconst LoginForm = () => {\n  const {\n    email\n  } = useSelector(state => state.user);\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm(); // console.log(watch('example')); // watch input value by passing the name of it \n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(loginRequestAction({\n      email: data.email,\n      password: data.password\n    }));\n    console.log(data.email, data.password);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    name: \"email\",\n    defaultValue: \"\",\n    ref: register({\n      pattern: /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/g,\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), errors.email && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }\n  }, \"This is required\"), __jsx(\"input\", {\n    name: \"password\",\n    defaultValue: \"\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), errors.exampleRequired && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 36\n    }\n  }, \"This field is required\"), __jsx(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/components/loginForm.js"],"names":["React","useForm","useSelector","useDispatch","loginRequestAction","LoginForm","email","state","user","register","handleSubmit","watch","errors","dispatch","onSubmit","data","password","console","log","pattern","required","exampleRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA7B;AAEA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAA4CX,OAAO,EAAzD,CAHsB,CAItB;;AAEA,QAAMY,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,QAAMW,QAAQ,GAAIC,IAAD,IAAU;AACzBF,IAAAA,QAAQ,CAACT,kBAAkB,CAAC;AAC1BE,MAAAA,KAAK,EAAES,IAAI,CAACT,KADc;AAE1BU,MAAAA,QAAQ,EAAED,IAAI,CAACC;AAFW,KAAD,CAAnB,CAAR;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACT,KAAjB,EAAwBS,IAAI,CAACC,QAA7B;AAED,GAPD;;AAUA,SACE,4BAEE;AAAM,IAAA,QAAQ,EAAEN,YAAY,CAACI,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,YAAY,EAAC,EAAjC;AAAoC,IAAA,GAAG,EAAEL,QAAQ,CAAC;AAAEU,MAAAA,OAAO,EAAE,6DAAX;AAA0EC,MAAAA,QAAQ,EAAE;AAApF,KAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGR,MAAM,CAACN,KAAP,IAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHnB,EAKE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,YAAY,EAAC,EAApC;AAAuC,IAAA,GAAG,EAAEG,QAAQ,CAAC;AAAEW,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAOGR,MAAM,CAACS,eAAP,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAP7B,EAQE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAFF,CADF;AAeD,CAjCD;;AAmCA,eAAehB,SAAf","sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { loginRequestAction } from '../reducers/user';\r\n\r\nconst LoginForm = () => {\r\n  const { email } = useSelector((state) => state.user);\r\n\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  // console.log(watch('example')); // watch input value by passing the name of it \r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(loginRequestAction({\r\n      email: data.email,\r\n      password: data.password,\r\n    }));\r\n    console.log(data.email, data.password);\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */}\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {/* register your input into the hook by invoking the \"register\" function */}\r\n        <input name=\"email\" defaultValue=\"\" ref={register({ pattern: /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/g, required: true })} />\r\n        {errors.email && <span>This is required</span>}\r\n        {/* include validation with required or other standard HTML validation rules */}\r\n        <input name=\"password\" defaultValue=\"\" ref={register({ required: true })} />\r\n        {/* errors will return when field validation fails  */}\r\n        {errors.exampleRequired && <span>This field is required</span>}\r\n        <input type=\"submit\" />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}