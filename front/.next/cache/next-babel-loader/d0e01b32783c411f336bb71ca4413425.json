{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\TodoList\\\\front\\\\components\\\\postCard.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Card, Avatar } from 'antd';\nimport { SettingOutlined, EditOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport propTypes from 'prop-types';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport parseDate from '../functions/parseDate';\nimport PostImages from './PostImages';\n\nvar PostCard = function PostCard(_ref) {\n  var post = _ref.post;\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    style: {\n      margin: '100px 300px',\n      borderRadius: '15px'\n    },\n    hoverable: true,\n    cover: __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, __jsx(Avatar, {\n      src: \"http://localhost:3065/profile/\".concat(post.User.profileImg),\n      style: {\n        \"float\": 'left'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginLeft: '20px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, __jsx(\"strong\", {\n      style: {\n        flex: 1,\n        marginLeft: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }\n    }, post.User.nickname), __jsx(\"p\", {\n      style: {\n        flex: 1,\n        marginLeft: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, parseDate(post.createdAt))), __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, post.title), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, post.content), post.Images.length > 0 && __jsx(PostImages, {\n      alt: \"image\",\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 40\n      }\n    })),\n    actions: [__jsx(SettingOutlined, {\n      key: \"setting\",\n      style: {\n        borderRadius: '15px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }), __jsx(EditOutlined, {\n      key: \"edit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }), __jsx(EllipsisOutlined, {\n      key: \"ellipsis\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    })],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: propTypes.array.isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/components/postCard.js"],"names":["React","useEffect","useDispatch","Card","Avatar","SettingOutlined","EditOutlined","EllipsisOutlined","propTypes","LOAD_POSTS_REQUEST","parseDate","PostImages","PostCard","post","margin","borderRadius","User","profileImg","display","flexDirection","marginLeft","flex","nickname","createdAt","title","content","Images","length","array","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,SAASC,eAAT,EAA0BC,YAA1B,EAAwCC,gBAAxC,QAAgE,mBAAhE;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC7B,SACE,4BACE,MAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,aAAV;AAAyBC,MAAAA,YAAY,EAAE;AAAvC,KADT;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,KAAK,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAQ,MAAA,GAAG,0CAAmCF,IAAI,CAACG,IAAL,CAAUC,UAA7C,CAAX;AAAsE,MAAA,KAAK,EAAE;AAAE,iBAAO;AAAT,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,aAAa,EAAE,QAAlC;AAA4CC,QAAAA,UAAU,EAAE;AAAxD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWD,QAAAA,UAAU,EAAE;AAAvB,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDP,IAAI,CAACG,IAAL,CAAUM,QAA3D,CADF,EAEE;AAAG,MAAA,KAAK,EAAE;AAAED,QAAAA,IAAI,EAAE,CAAR;AAAWD,QAAAA,UAAU,EAAE;AAAvB,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4CV,SAAS,CAACG,IAAI,CAACU,SAAN,CAArD,CAFF,CAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASV,IAAI,CAACW,KAAd,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIX,IAAI,CAACY,OAAT,CAPF,EAQGZ,IAAI,CAACa,MAAL,CAAYC,MAAZ,GAAqB,CAArB,IAA0B,MAAC,UAAD;AAAY,MAAA,GAAG,EAAC,OAAhB;AAAwB,MAAA,MAAM,EAAEd,IAAI,CAACa,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAR7B,CAJJ;AAeE,IAAA,OAAO,EAAE,CACP,MAAC,eAAD;AAAiB,MAAA,GAAG,EAAC,SAArB;AAA+B,MAAA,KAAK,EAAE;AAAEX,QAAAA,YAAY,EAAE;AAAhB,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,EAEP,MAAC,YAAD;AAAc,MAAA,GAAG,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFO,EAGP,MAAC,gBAAD;AAAkB,MAAA,GAAG,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHO,CAfX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAyBD,CA1BD;;KAAMH,Q;AA4BNA,QAAQ,CAACJ,SAAT,GAAqB;AACnBK,EAAAA,IAAI,EAAEL,SAAS,CAACoB,KAAV,CAAgBC;AADH,CAArB;AAIA,eAAejB,QAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Card, Avatar } from 'antd';\r\nimport { SettingOutlined, EditOutlined, EllipsisOutlined } from '@ant-design/icons';\r\nimport propTypes from 'prop-types';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\nimport parseDate from '../functions/parseDate';\r\nimport PostImages from './PostImages';\r\n\r\n\r\nconst PostCard = ({ post }) => {\r\n  return (\r\n    <>\r\n      <Card\r\n        style={{ margin: '100px 300px', borderRadius: '15px' }}\r\n        hoverable\r\n        cover={(\r\n          <div>\r\n            <Avatar src={`http://localhost:3065/profile/${post.User.profileImg}`} style={{ float: 'left' }} />\r\n            <div style={{ display: 'flex', flexDirection: 'column', marginLeft: '20px' }}>\r\n              <strong style={{ flex: 1, marginLeft: '10px' }}>{post.User.nickname}</strong>\r\n              <p style={{ flex: 1, marginLeft: '10px' }}>{parseDate(post.createdAt)}</p>\r\n            </div>\r\n            <strong>{post.title}</strong>\r\n            <p>{post.content}</p>\r\n            {post.Images.length > 0 && <PostImages alt=\"image\" images={post.Images} />}\r\n          </div>\r\n        )}\r\n        actions={[\r\n          <SettingOutlined key=\"setting\" style={{ borderRadius: '15px' }} />,\r\n          <EditOutlined key=\"edit\" />,\r\n          <EllipsisOutlined key=\"ellipsis\" />,\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: propTypes.array.isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}