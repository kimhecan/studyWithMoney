{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  postInfos: [],\n  addPostMessage: null\n};\nconst ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nconst ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nconst ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nconst LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nconst LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nconst LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nconst UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nconst UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nconst UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\nconst DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\nconst DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nconst DELETE_POST_FAILURE = 'DELETE_POST_FAILURE';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.postInfos.unshift(action.data);\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostMessage = action.error;\n      break;\n\n    case LOAD_POST_REQUEST:\n      break;\n\n    case LOAD_POST_SUCCESS:\n      break;\n\n    case LOAD_POST_FAILURE:\n      break;\n\n    case UPDATE_POST_REQUEST:\n      break;\n\n    case UPDATE_POST_SUCCESS:\n      break;\n\n    case UPDATE_POST_FAILURE:\n      break;\n\n    case DELETE_POST_REQUEST:\n      break;\n\n    case DELETE_POST_SUCCESS:\n      break;\n\n    case DELETE_POST_FAILURE:\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/reducers/post.js"],"names":["produce","initialState","postInfos","addPostMessage","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","addPost","data","type","addComment","ADD_COMMENT_REQUEST","reducer","state","action","draft","unshift","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,EADe;AAE1BC,EAAAA,cAAc,EAAE;AAFU,CAArB;AAMP,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAEA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AAEA,MAAMC,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;AAEA,MAAMC,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;AAEA,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;AAChCC,EAAAA,IAAI,EAAEd,gBAD0B;AAEhCa,EAAAA;AAFgC,CAAX,CAAhB;AAKP,OAAO,MAAME,UAAU,GAAIF,IAAD,KAAW;AACnCC,EAAAA,IAAI,EAAEE,mBAD6B;AAEnCH,EAAAA;AAFmC,CAAX,CAAnB;;AAMP,MAAMI,OAAO,GAAG,CAACC,KAAK,GAAGrB,YAAT,EAAuBsB,MAAvB,KAAkCvB,OAAO,CAACsB,KAAD,EAASE,KAAD,IAAW;AAC1E,UAAQD,MAAM,CAACL,IAAf;AACE,SAAKd,gBAAL;AACE;;AACF,SAAKC,gBAAL;AACEmB,MAAAA,KAAK,CAACtB,SAAN,CAAgBuB,OAAhB,CAAwBF,MAAM,CAACN,IAA/B;AACA;;AACF,SAAKX,gBAAL;AACEkB,MAAAA,KAAK,CAACrB,cAAN,GAAuBoB,MAAM,CAACG,KAA9B;AACA;;AACF,SAAKnB,iBAAL;AACE;;AACF,SAAKC,iBAAL;AACE;;AACF,SAAKC,iBAAL;AACE;;AACF,SAAKC,mBAAL;AACE;;AACF,SAAKC,mBAAL;AACE;;AACF,SAAKC,mBAAL;AACE;;AACF,SAAKC,mBAAL;AACE;;AACF,SAAKC,mBAAL;AACE;;AACF,SAAKC,mBAAL;AACE;;AACF;AACE;AA5BJ;AA8BD,CA/BwD,CAAzD;;AAiCA,eAAeM,OAAf","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  postInfos: [],\r\n  addPostMessage: null,\r\n};\r\n\r\n\r\nconst ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nconst ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nconst ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nconst LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\nconst LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nconst LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nconst UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\r\nconst UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\r\nconst UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\r\n\r\nconst DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\r\nconst DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\r\nconst DELETE_POST_FAILURE = 'DELETE_POST_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case ADD_POST_REQUEST:\r\n      break;\r\n    case ADD_POST_SUCCESS:\r\n      draft.postInfos.unshift(action.data);\r\n      break;\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostMessage = action.error;\r\n      break;\r\n    case LOAD_POST_REQUEST:\r\n      break;\r\n    case LOAD_POST_SUCCESS:\r\n      break;\r\n    case LOAD_POST_FAILURE:\r\n      break;\r\n    case UPDATE_POST_REQUEST:\r\n      break;\r\n    case UPDATE_POST_SUCCESS:\r\n      break;\r\n    case UPDATE_POST_FAILURE:\r\n      break;\r\n    case DELETE_POST_REQUEST:\r\n      break;\r\n    case DELETE_POST_SUCCESS:\r\n      break;\r\n    case DELETE_POST_FAILURE:\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}