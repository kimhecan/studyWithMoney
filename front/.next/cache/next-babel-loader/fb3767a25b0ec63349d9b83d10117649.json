{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\TodoList\\\\front\\\\components\\\\loginForm.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { Input, Button, Label } from 'antd';\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\nimport { loginRequestAction } from '../reducers/user';\n\nconst LoginForm = () => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // console.log(watch('example')); // watch input value by passing the name of it\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(loginRequestAction({\n      id: data.id,\n      password: data.password\n    }));\n    console.log(data.id, data.password);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      position: 'absolute',\n      left: '39%',\n      top: '35%',\n      marginTop: '200px',\n      padding: '70px 70px',\n      border: '2px solid #ccc',\n      borderRadius: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    hmltFor: \"id\",\n    style: {\n      color: 'white',\n      position: 'absolute',\n      left: '10%',\n      top: '35%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"ID\"), __jsx(Input, {\n    name: \"id\",\n    placeholder: \"Enter ID\",\n    ref: register({\n      required: true\n    }),\n    style: {\n      width: '170px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), errors.id && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, \"id is required\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), __jsx(\"label\", {\n    hmltFor: \"password\",\n    style: {\n      color: 'white',\n      position: 'absolute',\n      left: '10%',\n      top: '35%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Password\"), __jsx(Input.Password, {\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    placeholder: \"Enter Password\",\n    iconRender: visible => visible ? __jsx(EyeTwoTone, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 49\n      }\n    }) : __jsx(EyeInvisibleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 66\n      }\n    }),\n    style: {\n      width: '170px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), errors.password && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 31\n    }\n  }, \"password is required\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    ghost: true,\n    style: {\n      color: 'white',\n      borderColor: 'white',\n      marginTop: '10px',\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"button\",\n    ghost: true,\n    style: {\n      color: 'white',\n      borderColor: 'white',\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/components/loginForm.js"],"names":["React","useForm","useDispatch","Input","Button","Label","EyeInvisibleOutlined","EyeTwoTone","loginRequestAction","LoginForm","register","handleSubmit","errors","dispatch","onSubmit","data","id","password","console","log","position","left","top","marginTop","padding","border","borderRadius","color","required","width","visible","borderColor","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Input, Button, Label } from 'antd';\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport { loginRequestAction } from '../reducers/user';\r\n\r\nconst LoginForm = () => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  // console.log(watch('example')); // watch input value by passing the name of it\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(loginRequestAction({\r\n      id: data.id,\r\n      password: data.password,\r\n    }));\r\n    console.log(data.id, data.password);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ position: 'absolute', left: '39%', top: '35%', marginTop: '200px', padding: '70px 70px', border: '2px solid #ccc', borderRadius: '5px' }}>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <label hmltFor=\"id\" style={{ color: 'white', position: 'absolute', left: '10%', top: '35%' }}>ID</label>\r\n          <Input name=\"id\" placeholder=\"Enter ID\" ref={register({ required: true })} style={{ width: '170px' }} />\r\n          {errors.id && <span>id is required</span>}\r\n          <br />\r\n          <br />\r\n          <label hmltFor=\"password\" style={{ color: 'white', position: 'absolute', left: '10%', top: '35%' }}>Password</label>\r\n          <Input.Password\r\n            name=\"password\"\r\n            ref={register({ required: true })}\r\n            placeholder=\"Enter Password\"\r\n            iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n            style={{ width: '170px' }}\r\n          />\r\n          {errors.password && <span>password is required</span>}\r\n          <br />\r\n          <Button type=\"primary\" htmlType=\"submit\" ghost style={{ color: 'white', borderColor: 'white', marginTop: '10px', marginRight: '10px' }}>로그인</Button>\r\n          <Button type=\"primary\" htmlType=\"button\" ghost style={{ color: 'white', borderColor: 'white', marginTop: '10px' }}>회원가입</Button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}