{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\TodoList\\\\front\\\\pages\\\\freeBoard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Row, Col, PageHeader } from 'antd';\nimport AppLayout from '../components/Applayout';\nimport PostForm from '../components/postForm';\nimport PostCard from '../components/postCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nvar FreeBoard = function FreeBoard() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      postInfos = _useSelector.postInfos,\n      hasMorePosts = _useSelector.hasMorePosts;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts) {\n          var _postInfos;\n\n          var lastId = (_postInfos = postInfos[postInfos.length - 1]) === null || _postInfos === void 0 ? void 0 : _postInfos.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId: lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [postInfos, hasMorePosts]);\n  return __jsx(React.Fragment, null, __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginLeft: '20px',\n      marginTop: '10px',\n      marginRight: '20px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(PageHeader, {\n    className: \"site-page-header\",\n    title: \"\\uC790\\uC720\\uAC8C\\uC2DC\\uD310\",\n    subTitle: \"\\uD558\\uB0E5\\uC774\\uB4E4\\uC758 \\uC18C\\uD1B5\\uACF5\\uAC04\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }), __jsx(PostForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }), postInfos.map(function (post) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 40\n      }\n    });\n  }))), __jsx(Col, {\n    span: 4,\n    style: {\n      backgroundColor: '#50bcdf'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"\\uAD11\\uACE0\\uC600\\uC73C\\uBA74 \\uC88B\\uACA0\\uB2E4\"))));\n};\n\n_s(FreeBoard, \"RIuOXnpmAAhdIL7DG0NlTwUdU04=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = FreeBoard;\nexport default FreeBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FreeBoard\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/pages/freeBoard.js"],"names":["React","useEffect","useSelector","useDispatch","Row","Col","PageHeader","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","FreeBoard","state","post","postInfos","hasMorePosts","dispatch","type","LOAD_USER_REQUEST","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","addEventListener","removeEventListener","marginLeft","marginTop","marginRight","map","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, PageHeader } from 'antd';\r\nimport AppLayout from '../components/Applayout';\r\nimport PostForm from '../components/postForm';\r\nimport PostCard from '../components/postCard';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\n\r\nconst FreeBoard = () => {\r\n  const { postInfos, hasMorePosts } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_USER_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePosts) {\r\n          const lastId = postInfos[postInfos.length - 1]?.id;\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n            lastId,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [postInfos, hasMorePosts]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <AppLayout>\r\n        <Row>\r\n          <Col span={20}>\r\n            <div style={{ marginLeft: '20px', marginTop: '10px', marginRight: '20px' }}>\r\n              <PageHeader className=\"site-page-header\" title=\"자유게시판\" subTitle=\"하냥이들의 소통공간\" />\r\n              <PostForm />\r\n              {postInfos.map((post) => <PostCard key={post.id} post={post} />)}\r\n            </div>\r\n          </Col>\r\n          <Col span={4} style={{ backgroundColor: '#50bcdf' }}>\r\n            광고였으면 좋겠다\r\n          </Col>\r\n        </Row>\r\n      </AppLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FreeBoard;\r\n"]},"metadata":{},"sourceType":"module"}