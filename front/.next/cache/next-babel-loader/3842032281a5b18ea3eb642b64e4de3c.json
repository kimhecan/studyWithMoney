{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers/index';\nimport rootSaga from '../sagas';\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhencer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhencer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/store/configure.js"],"names":["createWrapper","createSagaMiddleware","createStore","applyMiddleware","compose","composeWithDevTools","reducer","rootSaga","configureStore","sagaMiddleware","middlewares","enhencer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,cAAc,GAAGR,oBAAoB,EAA3C;AACA,QAAMS,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,QAAME,QAAQ,GAAG,QACbP,OAAO,CAACD,eAAe,CAAC,GAAGO,WAAJ,CAAhB,CADM,GAEbL,mBAAmB,CAACF,eAAe,CAAC,GAAGO,WAAJ,CAAhB,CAFvB;AAIA,QAAME,KAAK,GAAGV,WAAW,CAACI,OAAD,EAAUK,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBP,QAAnB,CAAjB;AACA,SAAOK,KAAP;AACD,CAVD;;AAYA,MAAMG,OAAO,GAAGf,aAAa,CAACQ,cAAD,EAAiB;AAC5CQ,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from '../reducers/index';\r\nimport rootSaga from '../sagas';\r\n\r\nconst configureStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = [sagaMiddleware];\r\n  const enhencer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : composeWithDevTools(applyMiddleware(...middlewares));\r\n\r\n  const store = createStore(reducer, enhencer);\r\n  store.sagaTask = sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}