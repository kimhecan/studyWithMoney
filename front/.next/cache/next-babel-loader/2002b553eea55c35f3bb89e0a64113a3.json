{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\TodoList\\\\front\\\\components\\\\postCard.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, Avatar } from 'antd';\nimport { LikeOutlined, CommentOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport propTypes from 'prop-types';\nimport parseDate from '../functions/parseDate';\nimport PostImages from './postImages';\n\nconst PostCard = ({\n  post\n}) => {\n  console.log(post, 'post');\n  const {\n    info\n  } = useSelector(state => state.user);\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    style: {\n      marginTop: '100px',\n      borderTopLeftRadius: '15px',\n      borderTopRightRadius: '15px'\n    },\n    hoverable: true,\n    cover: __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      style: {\n        margin: '15px',\n        flex: '1'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, __jsx(Avatar, {\n      src: `http://localhost:3065/profile/${post.User.profileImg}`,\n      size: \"large\",\n      style: {\n        width: '50px',\n        height: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      style: {\n        flex: '15',\n        marginTop: '12px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, __jsx(\"strong\", {\n      style: {\n        fontSize: '16px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, post.User.nickname), __jsx(\"p\", {\n      style: {\n        color: 'gray'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, parseDate(post.createdAt)))), __jsx(\"p\", {\n      style: {\n        margin: '7px 15px',\n        fontSize: '18px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, post.content), post.Images.length > 0 && __jsx(PostImages, {\n      alt: \"image\",\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 40\n      }\n    })),\n    actions: info.id === post.UserId ? [__jsx(LikeOutlined, {\n      key: \"like\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }\n    }), __jsx(CommentOutlined, {\n      key: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 43\n      }\n    }), __jsx(EllipsisOutlined, {\n      key: \"etc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 78\n      }\n    })] : [__jsx(LikeOutlined, {\n      key: \"like\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }\n    }), __jsx(CommentOutlined, {\n      key: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 43\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n};\n\nPostCard.propTypes = {\n  post: propTypes.object.isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/components/postCard.js"],"names":["React","useSelector","Card","Avatar","LikeOutlined","CommentOutlined","EllipsisOutlined","propTypes","parseDate","PostImages","PostCard","post","console","log","info","state","user","marginTop","borderTopLeftRadius","borderTopRightRadius","display","flexDirection","margin","flex","User","profileImg","width","height","fontSize","nickname","color","createdAt","content","Images","length","id","UserId","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Card, Avatar } from 'antd';\r\nimport { LikeOutlined, CommentOutlined, EllipsisOutlined } from '@ant-design/icons';\r\nimport propTypes from 'prop-types';\r\nimport parseDate from '../functions/parseDate';\r\nimport PostImages from './postImages';\r\n\r\nconst PostCard = ({ post }) => {\r\n  console.log(post, 'post');\r\n\r\n  const { info } = useSelector((state) => state.user);\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        style={{ marginTop: '100px', borderTopLeftRadius: '15px', borderTopRightRadius: '15px' }}\r\n        hoverable\r\n        cover={(\r\n          <div>\r\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n              <div style={{ margin: '15px', flex: '1' }}>\r\n                <Avatar\r\n                  src={`http://localhost:3065/profile/${post.User.profileImg}`}\r\n                  size=\"large\"\r\n                  style={{ width: '50px', height: '50px' }}\r\n                />\r\n              </div>\r\n              <div style={{ flex: '15', marginTop: '12px' }}>\r\n                <strong style={{ fontSize: '16px' }}>{post.User.nickname}</strong>\r\n                <p style={{ color: 'gray' }}>{parseDate(post.createdAt)}</p>\r\n              </div>\r\n            </div>\r\n            <p style={{ margin: '7px 15px', fontSize: '18px' }}>{post.content}</p>\r\n            {post.Images.length > 0 && <PostImages alt=\"image\" images={post.Images} />}\r\n          </div>\r\n        )}\r\n        actions={info.id === post.UserId\r\n          ? [<LikeOutlined key=\"like\" />, <CommentOutlined key=\"comment\" />, <EllipsisOutlined key=\"etc\" />]\r\n          : [<LikeOutlined key=\"like\" />, <CommentOutlined key=\"comment\" />]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: propTypes.object.isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}