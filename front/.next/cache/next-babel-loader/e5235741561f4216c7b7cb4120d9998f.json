{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  postInfos: [],\n  addPostMessage: null\n};\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\nexport const DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nexport const DELETE_POST_FAILURE = 'DELETE_POST_FAILURE';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n}); // export const addComment = (data) => ({\n//   type: ADD_COMMENT_REQUEST,\n//   data,\n// });\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.postInfos.unshift(action.data);\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostMessage = action.error;\n      break;\n\n    case LOAD_POST_REQUEST:\n      break;\n\n    case LOAD_POST_SUCCESS:\n      break;\n\n    case LOAD_POST_FAILURE:\n      break;\n\n    case UPDATE_POST_REQUEST:\n      break;\n\n    case UPDATE_POST_SUCCESS:\n      break;\n\n    case UPDATE_POST_FAILURE:\n      break;\n\n    case DELETE_POST_REQUEST:\n      break;\n\n    case DELETE_POST_SUCCESS:\n      break;\n\n    case DELETE_POST_FAILURE:\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/reducers/post.js"],"names":["produce","initialState","postInfos","addPostMessage","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","addPost","data","type","reducer","state","action","draft","unshift","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,EADe;AAE1BC,EAAAA,cAAc,EAAE;AAFU,CAArB;AAKP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;AAChCC,EAAAA,IAAI,EAAEd,gBAD0B;AAEhCa,EAAAA;AAFgC,CAAX,CAAhB,C,CAKP;AACA;AACA;AACA;;AAGA,MAAME,OAAO,GAAG,CAACC,KAAK,GAAGnB,YAAT,EAAuBoB,MAAvB,KAAkCrB,OAAO,CAACoB,KAAD,EAASE,KAAD,IAAW;AAC1E,UAAQD,MAAM,CAACH,IAAf;AACE,SAAKd,gBAAL;AACE;;AACF,SAAKC,gBAAL;AACEiB,MAAAA,KAAK,CAACpB,SAAN,CAAgBqB,OAAhB,CAAwBF,MAAM,CAACJ,IAA/B;AACA;;AACF,SAAKX,gBAAL;AACEgB,MAAAA,KAAK,CAACnB,cAAN,GAAuBkB,MAAM,CAACG,KAA9B;AACA;;AACF,SAAKjB,iBAAL;AACE;;AACF,SAAKC,iBAAL;AACE;;AACF,SAAKC,iBAAL;AACE;;AACF,SAAKC,mBAAL;AACE;;AACF,SAAKC,mBAAL;AACE;;AACF,SAAKC,mBAAL;AACE;;AACF,SAAKC,mBAAL;AACE;;AACF,SAAKC,mBAAL;AACE;;AACF,SAAKC,mBAAL;AACE;;AACF;AACE;AA5BJ;AA8BD,CA/BwD,CAAzD;;AAiCA,eAAeI,OAAf","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  postInfos: [],\r\n  addPostMessage: null,\r\n};\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\r\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\r\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\r\n\r\nexport const DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\r\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\r\nexport const DELETE_POST_FAILURE = 'DELETE_POST_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\n// export const addComment = (data) => ({\r\n//   type: ADD_COMMENT_REQUEST,\r\n//   data,\r\n// });\r\n\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case ADD_POST_REQUEST:\r\n      break;\r\n    case ADD_POST_SUCCESS:\r\n      draft.postInfos.unshift(action.data);\r\n      break;\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostMessage = action.error;\r\n      break;\r\n    case LOAD_POST_REQUEST:\r\n      break;\r\n    case LOAD_POST_SUCCESS:\r\n      break;\r\n    case LOAD_POST_FAILURE:\r\n      break;\r\n    case UPDATE_POST_REQUEST:\r\n      break;\r\n    case UPDATE_POST_SUCCESS:\r\n      break;\r\n    case UPDATE_POST_FAILURE:\r\n      break;\r\n    case DELETE_POST_REQUEST:\r\n      break;\r\n    case DELETE_POST_SUCCESS:\r\n      break;\r\n    case DELETE_POST_FAILURE:\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}