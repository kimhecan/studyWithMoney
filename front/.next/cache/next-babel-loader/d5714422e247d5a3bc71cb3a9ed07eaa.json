{"ast":null,"code":"import produce from 'immer';\nexport var initialState = {\n  info: {},\n  signUpMessage: null,\n  logInMessage: null\n};\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var RESET_SIGN_UP_MESSAGE = 'RESET_SIGN_UP_MESSAGE';\nexport var RESET_LOG_IN_MESSAGE = 'RESET_LOG_IN_MESSAGE';\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var joinRequestAction = function joinRequestAction(data) {\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case SIGN_UP_REQUEST:\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.signUpMessage = action.data;\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.signUpMessage = action.error;\n        break;\n\n      case LOG_IN_REQUEST:\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.info = action.data;\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInMessage = action.error;\n        break;\n\n      case LOG_OUT_REQUEST:\n        break;\n\n      case LOG_OUT_SUCCESS:\n        draft.info = {};\n        break;\n\n      case LOG_OUT_FAILURE:\n        break;\n\n      case RESET_SIGN_UP_MESSAGE:\n        draft.signUpMessage = null;\n        break;\n\n      case RESET_LOG_IN_MESSAGE:\n        draft.logInMessage = null;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/reducers/user.js"],"names":["produce","initialState","info","signUpMessage","logInMessage","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","RESET_SIGN_UP_MESSAGE","RESET_LOG_IN_MESSAGE","loginRequestAction","data","type","joinRequestAction","reducer","state","action","draft","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE,EADoB;AAE1BC,EAAAA,aAAa,EAAE,IAFW;AAG1BC,EAAAA,YAAY,EAAE;AAHY,CAArB;AAOP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD;AAAA,SAAW;AAC3CC,IAAAA,IAAI,EAAEV,cADqC;AAE3CS,IAAAA,IAAI,EAAJA;AAF2C,GAAX;AAAA,CAA3B;AAKP,OAAO,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACF,IAAD;AAAA,SAAW;AAC1CC,IAAAA,IAAI,EAAEb,eADoC;AAE1CY,IAAAA,IAAI,EAAJA;AAF0C,GAAX;AAAA,CAA1B;;AAKP,IAAMG,OAAO,GAAG,SAAVA,OAAU;AAAA,MAACC,KAAD,uEAASpB,YAAT;AAAA,MAAuBqB,MAAvB;AAAA,SAAkCtB,OAAO,CAACqB,KAAD,EAAQ,UAACE,KAAD,EAAW;AAC1E,YAAQD,MAAM,CAACJ,IAAf;AACE,WAAKb,eAAL;AACE;;AACF,WAAKC,eAAL;AACEiB,QAAAA,KAAK,CAACpB,aAAN,GAAsBmB,MAAM,CAACL,IAA7B;AACA;;AACF,WAAKV,eAAL;AACEgB,QAAAA,KAAK,CAACpB,aAAN,GAAsBmB,MAAM,CAACE,KAA7B;AACA;;AACF,WAAKhB,cAAL;AACE;;AACF,WAAKC,cAAL;AACEc,QAAAA,KAAK,CAACrB,IAAN,GAAaoB,MAAM,CAACL,IAApB;AACA;;AACF,WAAKP,cAAL;AACEa,QAAAA,KAAK,CAACnB,YAAN,GAAqBkB,MAAM,CAACE,KAA5B;AACA;;AACF,WAAKb,eAAL;AACE;;AACF,WAAKC,eAAL;AACEW,QAAAA,KAAK,CAACrB,IAAN,GAAa,EAAb;AACA;;AACF,WAAKW,eAAL;AACE;;AACF,WAAKC,qBAAL;AACES,QAAAA,KAAK,CAACpB,aAAN,GAAsB,IAAtB;AACA;;AACF,WAAKY,oBAAL;AACEQ,QAAAA,KAAK,CAACnB,YAAN,GAAqB,IAArB;AACA;;AACF;AACE;AA/BJ;AAiCD,GAlCwD,CAAzC;AAAA,CAAhB;;AAoCA,eAAegB,OAAf","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  info: {},\r\n  signUpMessage: null,\r\n  logInMessage: null,\r\n\r\n};\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const RESET_SIGN_UP_MESSAGE = 'RESET_SIGN_UP_MESSAGE';\r\nexport const RESET_LOG_IN_MESSAGE = 'RESET_LOG_IN_MESSAGE';\r\n\r\nexport const loginRequestAction = (data) => ({\r\n  type: LOG_IN_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const joinRequestAction = (data) => ({\r\n  type: SIGN_UP_REQUEST,\r\n  data,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case SIGN_UP_REQUEST:\r\n      break;\r\n    case SIGN_UP_SUCCESS:\r\n      draft.signUpMessage = action.data;\r\n      break;\r\n    case SIGN_UP_FAILURE:\r\n      draft.signUpMessage = action.error;\r\n      break;\r\n    case LOG_IN_REQUEST:\r\n      break;\r\n    case LOG_IN_SUCCESS:\r\n      draft.info = action.data;\r\n      break;\r\n    case LOG_IN_FAILURE:\r\n      draft.logInMessage = action.error;\r\n      break;\r\n    case LOG_OUT_REQUEST:\r\n      break;\r\n    case LOG_OUT_SUCCESS:\r\n      draft.info = {};\r\n      break;\r\n    case LOG_OUT_FAILURE:\r\n      break;\r\n    case RESET_SIGN_UP_MESSAGE:\r\n      draft.signUpMessage = null;\r\n      break;\r\n    case RESET_LOG_IN_MESSAGE:\r\n      draft.logInMessage = null;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}