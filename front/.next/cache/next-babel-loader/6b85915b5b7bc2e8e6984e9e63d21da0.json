{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\TodoList\\\\front\\\\components\\\\postList.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { List, Avatar, Space } from 'antd';\nimport { MessageOutlined, LikeOutlined } from '@ant-design/icons';\nimport propTypes from 'prop-types';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nconst PostList = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const listData = [];\n  console.log(post, 'postimages');\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, [listData]);\n  post.forEach(v => {\n    listData.push({\n      title: v.title,\n      avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n      description: v.content,\n      img: v.Images\n    });\n  });\n\n  const IconText = ({\n    icon,\n    text\n  }) => __jsx(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(icon), text);\n\n  return __jsx(React.Fragment, null, __jsx(List, {\n    itemLayout: \"vertical\",\n    dataSource: listData,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        borderColor: 'red'\n      },\n      key: item.title,\n      actions: [__jsx(IconText, {\n        icon: LikeOutlined,\n        text: \"156\",\n        key: \"list-vertical-like-o\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }), __jsx(IconText, {\n        icon: MessageOutlined,\n        text: \"2\",\n        key: \"list-vertical-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      })],\n      extra: item.img.map(v => {\n        return __jsx(\"img\", {\n          width: 150,\n          alt: \"logo\",\n          src: `http://localhost:3065/${v.src}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 24\n          }\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, __jsx(List.Item.Meta, {\n      avatar: __jsx(Avatar, {\n        src: item.avatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 23\n        }\n      }),\n      title: __jsx(\"a\", {\n        href: item.href,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 22\n        }\n      }, item.title),\n      description: item.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), item.content),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n};\n\nPostList.propTypes = {\n  post: propTypes.array.isRequired\n};\nexport default PostList;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/components/postList.js"],"names":["React","useEffect","useDispatch","List","Avatar","Space","MessageOutlined","LikeOutlined","propTypes","LOAD_POSTS_REQUEST","PostList","post","dispatch","listData","console","log","type","forEach","v","push","title","avatar","description","content","img","Images","IconText","icon","text","createElement","item","borderColor","map","src","href","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { List, Avatar, Space } from 'antd';\r\nimport { MessageOutlined, LikeOutlined } from '@ant-design/icons';\r\nimport propTypes from 'prop-types';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\n\r\nconst PostList = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const listData = [];\r\n  console.log(post, 'postimages');\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_POSTS_REQUEST,\r\n    });\r\n  }, [listData]);\r\n\r\n  post.forEach((v) => {\r\n    listData.push({\r\n      title: v.title,\r\n      avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n      description: v.content,\r\n      img: v.Images,\r\n    });\r\n  });\r\n\r\n  const IconText = ({ icon, text }) => (\r\n    <Space>\r\n      {React.createElement(icon)}\r\n      {text}\r\n    </Space>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <List\r\n        itemLayout=\"vertical\"\r\n        dataSource={listData}\r\n        renderItem={item => (\r\n          <List.Item\r\n            style={{ borderColor: 'red' }}\r\n            key={item.title}\r\n            actions={[\r\n              <IconText icon={LikeOutlined} text=\"156\" key=\"list-vertical-like-o\" />,\r\n              <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\" />,\r\n            ]}\r\n            extra={\r\n              item.img.map((v) => {\r\n                return <img width={150} alt=\"logo\" src={`http://localhost:3065/${v.src}`} />;\r\n              })\r\n            }\r\n          >\r\n            <List.Item.Meta\r\n              avatar={<Avatar src={item.avatar} />}\r\n              title={<a href={item.href}>{item.title}</a>}\r\n              description={item.description}\r\n            />\r\n            {item.content}\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nPostList.propTypes = {\r\n  post: propTypes.array.isRequired,\r\n};\r\n\r\nexport default PostList;\r\n"]},"metadata":{},"sourceType":"module"}