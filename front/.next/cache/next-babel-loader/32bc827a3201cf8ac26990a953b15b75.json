{"ast":null,"code":"import produce from 'immer';\nimport faker from 'faker';\nexport const initialState = {\n  info: {\n    id: null,\n    password: null,\n    nickname: null,\n    email: null,\n    grade: null,\n    department: null\n  }\n};\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n});\nexport const joinRequestAction = data => ({\n  type: SIGN_UP_REQUEST,\n  data\n});\nexport const dummyUser = number => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  nickname: faker.name.findName()\n}));\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      draft.info.id = action.data.id;\n      draft.info.password = action.data.password;\n      break;\n\n    case LOG_IN_SUCCESS:\n      draft.info.user = dummyUser(action.data);\n      break;\n\n    case LOG_IN_FAILURE:\n      draft.info.logInError = action.error;\n      break;\n\n    case SIGN_UP_REQUEST:\n      draft.info = action.data;\n      break;\n\n    case SIGN_UP_SUCCESS:\n      draft.info.user = dummyUser(action.data);\n      break;\n\n    case SIGN_UP_FAILURE:\n      draft.info.logInError = action.error;\n      break;\n\n    case LOG_OUT_REQUEST:\n      draft.info = null;\n      break;\n\n    case LOG_OUT_SUCCESS:\n      break;\n\n    case LOG_OUT_FAILURE:\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/reducers/user.js"],"names":["produce","faker","initialState","info","id","password","nickname","email","grade","department","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","loginRequestAction","data","type","joinRequestAction","dummyUser","number","Array","fill","map","shortId","generate","name","findName","reducer","state","action","draft","user","logInError","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,IADA;AAEJC,IAAAA,QAAQ,EAAE,IAFN;AAGJC,IAAAA,QAAQ,EAAE,IAHN;AAIJC,IAAAA,KAAK,EAAE,IAJH;AAKJC,IAAAA,KAAK,EAAE,IALH;AAMJC,IAAAA,UAAU,EAAE;AANR;AADoB,CAArB;AAWP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAGP,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,KAAW;AAC3CC,EAAAA,IAAI,EAAER,cADqC;AAE3CO,EAAAA;AAF2C,CAAX,CAA3B;AAKP,OAAO,MAAME,iBAAiB,GAAIF,IAAD,KAAW;AAC1CC,EAAAA,IAAI,EAAEX,eADoC;AAE1CU,EAAAA;AAF0C,CAAX,CAA1B;AAKP,OAAO,MAAMG,SAAS,GAAIC,MAAD,IAAYC,KAAK,CAACD,MAAD,CAAL,CAAcE,IAAd,GAAqBC,GAArB,CAAyB,OAAO;AACnEvB,EAAAA,EAAE,EAAEwB,OAAO,CAACC,QAAR,EAD+D;AAEnEvB,EAAAA,QAAQ,EAAEL,KAAK,CAAC6B,IAAN,CAAWC,QAAX;AAFyD,CAAP,CAAzB,CAA9B;;AAKP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG/B,YAAT,EAAuBgC,MAAvB,KAAkClC,OAAO,CAACiC,KAAD,EAASE,KAAD,IAAW;AAC1E,UAAQD,MAAM,CAACb,IAAf;AACE,SAAKR,cAAL;AACEsB,MAAAA,KAAK,CAAChC,IAAN,CAAWC,EAAX,GAAgB8B,MAAM,CAACd,IAAP,CAAYhB,EAA5B;AACA+B,MAAAA,KAAK,CAAChC,IAAN,CAAWE,QAAX,GAAsB6B,MAAM,CAACd,IAAP,CAAYf,QAAlC;AACA;;AACF,SAAKS,cAAL;AACEqB,MAAAA,KAAK,CAAChC,IAAN,CAAWiC,IAAX,GAAkBb,SAAS,CAACW,MAAM,CAACd,IAAR,CAA3B;AACA;;AACF,SAAKL,cAAL;AACEoB,MAAAA,KAAK,CAAChC,IAAN,CAAWkC,UAAX,GAAwBH,MAAM,CAACI,KAA/B;AACA;;AACF,SAAK5B,eAAL;AACEyB,MAAAA,KAAK,CAAChC,IAAN,GAAa+B,MAAM,CAACd,IAApB;AACA;;AACF,SAAKT,eAAL;AACEwB,MAAAA,KAAK,CAAChC,IAAN,CAAWiC,IAAX,GAAkBb,SAAS,CAACW,MAAM,CAACd,IAAR,CAA3B;AACA;;AACF,SAAKR,eAAL;AACEuB,MAAAA,KAAK,CAAChC,IAAN,CAAWkC,UAAX,GAAwBH,MAAM,CAACI,KAA/B;AACA;;AACF,SAAKtB,eAAL;AACEmB,MAAAA,KAAK,CAAChC,IAAN,GAAa,IAAb;AACA;;AACF,SAAKc,eAAL;AACE;;AACF,SAAKC,eAAL;AACE;;AACF;AACE;AA5BJ;AA8BD,CA/BwD,CAAzD;;AAiCA,eAAec,OAAf","sourcesContent":["import produce from 'immer';\r\nimport faker from 'faker';\r\n\r\nexport const initialState = {\r\n  info: {\r\n    id: null,\r\n    password: null,\r\n    nickname: null,\r\n    email: null,\r\n    grade: null,\r\n    department: null,\r\n  },\r\n};\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\n\r\nexport const loginRequestAction = (data) => ({\r\n  type: LOG_IN_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const joinRequestAction = (data) => ({\r\n  type: SIGN_UP_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const dummyUser = (number) => Array(number).fill().map(() => ({\r\n  id: shortId.generate(),\r\n  nickname: faker.name.findName(),\r\n}));\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST:\r\n      draft.info.id = action.data.id;\r\n      draft.info.password = action.data.password;\r\n      break;\r\n    case LOG_IN_SUCCESS:\r\n      draft.info.user = dummyUser(action.data);\r\n      break;\r\n    case LOG_IN_FAILURE:\r\n      draft.info.logInError = action.error;\r\n      break;\r\n    case SIGN_UP_REQUEST:\r\n      draft.info = action.data;\r\n      break;\r\n    case SIGN_UP_SUCCESS:\r\n      draft.info.user = dummyUser(action.data);\r\n      break;\r\n    case SIGN_UP_FAILURE:\r\n      draft.info.logInError = action.error;\r\n      break;\r\n    case LOG_OUT_REQUEST:\r\n      draft.info = null;\r\n      break;\r\n    case LOG_OUT_SUCCESS:\r\n      break;\r\n    case LOG_OUT_FAILURE:\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}