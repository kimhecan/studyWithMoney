{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\TodoList\\\\front\\\\components\\\\postForm.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Input, Button, Upload } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { UPLOAD_IMAGES_REQUEST } from '../reducers/post';\nconst {\n  TextArea\n} = Input;\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    console.log('Success:', values);\n    form.resetFields();\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const props = {\n    onChange({\n      file,\n      fileList\n    }) {\n      if (file.status === 'uploading') {\n        console.log(file, fileList);\n        const imageFormdata = new FormData();\n        console.log('Upload event:', fileList); // fileList.forEach((f) => {\n        //   imageFormdata.append('image', f.originFileObj);\n        // });\n\n        dispatch({\n          type: UPLOAD_IMAGES_REQUEST,\n          data: imageFormdata\n        });\n      }\n    }\n\n  };\n\n  const normFile = e => {\n    if (Array.isArray(e)) {\n      return e;\n    }\n\n    return e && e.fileList;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    name: \"basic\",\n    form: form,\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(Form.Item, {\n    name: \"title\",\n    rules: [{\n      required: true,\n      message: '제목을 입력해 주세요!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    placeholder: \"\\uAE00 \\uC81C\\uBAA9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    name: \"content\",\n    rules: [{\n      required: true,\n      message: '내용을 입력해주세요!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(TextArea, {\n    rows: 4,\n    placeholder: \"\\uC5EC\\uAE30\\uB97C \\uB20C\\uB7EC\\uC11C \\uAE00\\uC744 \\uC791\\uC131\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      flex: '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"\\uAC8C\\uC2DC\\uD558\\uAE30\")), __jsx(Form.Item, {\n    style: {\n      flex: '1'\n    },\n    name: \"upload\",\n    valuePropName: \"fileList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, __jsx(Upload, _extends({}, props, {\n    name: \"logo\",\n    listType: \"picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \" \", __jsx(UploadOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 24\n    }\n  }), \" \\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC \"))))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TodoList/front/components/postForm.js"],"names":["React","useDispatch","Form","Input","Button","Upload","UploadOutlined","UPLOAD_IMAGES_REQUEST","TextArea","PostForm","dispatch","form","useForm","onFinish","values","console","log","resetFields","onFinishFailed","errorInfo","props","onChange","file","fileList","status","imageFormdata","FormData","type","data","normFile","e","Array","isArray","required","message","display","flexDirection","flex"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,MAA9B,QAA4C,MAA5C;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAeL,KAArB;;AAEA,MAAMM,QAAQ,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,IAAD,IAAST,IAAI,CAACU,OAAL,EAAf;;AACA,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AAEAH,IAAAA,IAAI,CAACM,WAAL;AACD,GAJD;;AAMA,QAAMC,cAAc,GAAIC,SAAD,IAAe;AACpCJ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBG,SAAvB;AACD,GAFD;;AAIA,QAAMC,KAAK,GAAG;AACZC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,EAAqB;AAC3B,UAAID,IAAI,CAACE,MAAL,KAAgB,WAApB,EAAiC;AAC/BT,QAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ,EAAkBC,QAAlB;AACA,cAAME,aAAa,GAAG,IAAIC,QAAJ,EAAtB;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BO,QAA7B,EAH+B,CAI/B;AACA;AACA;;AACAb,QAAAA,QAAQ,CAAC;AACPiB,UAAAA,IAAI,EAAEpB,qBADC;AAEPqB,UAAAA,IAAI,EAAEH;AAFC,SAAD,CAAR;AAID;AACF;;AAdW,GAAd;;AAiBA,QAAMI,QAAQ,GAAIC,CAAD,IAAO;AACtB,QAAIC,KAAK,CAACC,OAAN,CAAcF,CAAd,CAAJ,EAAsB;AACpB,aAAOA,CAAP;AACD;;AACD,WAAOA,CAAC,IAAIA,CAAC,CAACP,QAAd;AACD,GALD;;AAOA,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,IAAI,EAAEZ,IAAzB;AAA+B,IAAA,QAAQ,EAAEE,QAAzC;AAAmD,IAAA,cAAc,EAAEK,cAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,KAAK,EAAE,CAAC;AAAEe,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,WAAW,EAAC,qBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAC,SAAhB;AAA0B,IAAA,KAAK,EAAE,CAAC;AAAED,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAE,CAAhB;AAAmB,IAAA,WAAW,EAAC,uGAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,aAAa,EAAE;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CADF,EAME,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAAlB;AAAiC,IAAA,IAAI,EAAC,QAAtC;AAA+C,IAAA,aAAa,EAAC,UAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD,eAAYjB,KAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,QAAQ,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAS,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAT,4CADF,CADF,CANF,CAPF,CADF,CADF;AAwBD,CA7DD;;AA+DA,eAAeX,QAAf","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Form, Input, Button, Upload } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { UPLOAD_IMAGES_REQUEST } from '../reducers/post';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst PostForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [form] = Form.useForm();\r\n  const onFinish = (values) => {\r\n    console.log('Success:', values);\r\n\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const props = {\r\n    onChange({ file, fileList }) {\r\n      if (file.status === 'uploading') {\r\n        console.log(file, fileList);\r\n        const imageFormdata = new FormData();\r\n        console.log('Upload event:', fileList);\r\n        // fileList.forEach((f) => {\r\n        //   imageFormdata.append('image', f.originFileObj);\r\n        // });\r\n        dispatch({\r\n          type: UPLOAD_IMAGES_REQUEST,\r\n          data: imageFormdata,\r\n        });\r\n      }\r\n    },\r\n  };\r\n\r\n  const normFile = (e) => {\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form name=\"basic\" form={form} onFinish={onFinish} onFinishFailed={onFinishFailed}>\r\n        <Form.Item name=\"title\" rules={[{ required: true, message: '제목을 입력해 주세요!' }]}>\r\n          <Input placeholder=\"글 제목\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"content\" rules={[{ required: true, message: '내용을 입력해주세요!' }]}>\r\n          <TextArea rows={4} placeholder=\"여기를 눌러서 글을 작성할 수 있습니다\" />\r\n        </Form.Item>\r\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n          <Form.Item style={{ flex: '1' }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              게시하기\r\n            </Button>\r\n          </Form.Item>\r\n          <Form.Item style={{ flex: '1' }} name=\"upload\" valuePropName=\"fileList\">\r\n            <Upload {...props} name=\"logo\" listType=\"picture\">\r\n              <Button> <UploadOutlined /> 이미지 업로드 </Button>\r\n            </Upload>\r\n          </Form.Item>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}